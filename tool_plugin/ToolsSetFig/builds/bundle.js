/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./tool_plugin/ToolsSetFig/test/main.js":
/*!**********************************************!*\
  !*** ./tool_plugin/ToolsSetFig/test/main.js ***!
  \**********************************************/
/***/ (() => {

eval("//全局变量\r\nconst root = document.documentElement;\r\n\r\n//创建页控件绑定\r\nconst fileName = document.getElementById('file-name');\r\n//导出页控件绑定\r\nconst exportInfo = document.getElementById('export-info');\r\n//编辑页控件绑定\r\nconst editorInfo = document.getElementById('editor-info');\r\nconst tagsContainer1 = document.getElementById('tags-area-import');\r\nconst tagsContainer2 = document.getElementById('tags-area-export');\r\nconst tagsContainer3 = document.getElementById('tags-container-3');\r\nconst upfileArea = document.getElementById('upfile-area');\r\nconst dataText = document.getElementById('data-text');\r\nconst dataTextTips = document.getElementById('data-text-tips');\r\nconst autoUp = document.getElementById('auto-upfile');\r\nconst inputExcel = document.getElementById('user-excel');\r\nconst inputImg = document.getElementById('user-img');\r\nconst inputFiles = document.getElementById('user-files');\r\nconst btnUp = document.getElementById('btn-up');\r\nconst anotherBtns = document.getElementById('another-btns');\r\nconst anotherBtns2 = document.getElementById('another-btns-2');\r\nconst anotherBtns3 = document.getElementById('another-btns-3');\r\nconst anotherBtns4 = document.getElementById('another-btns-4');\r\nconst editTag = document.getElementById('editor-tags');\r\nconst editSets = document.getElementById('editor-set');\r\nconst typeAllow = [\"jpg\",\"jpeg\",\"png\",\"webp\"];\r\nconst exportTagsEdit = document.getElementById('export-edit');\r\nconst exportTop = document.getElementById('export-top');\r\n\r\n//通用控件绑定\r\nconst btnKeep = document.getElementById('btn-keep');//绑定\"按钮-窗口固定/收起\"\r\nconst btnSetTheme = document.getElementById('theme')\r\n\r\nconst dragSources = document.getElementsByClassName('edits');\r\nconst dropZones = document.getElementById('editor-tags');\r\nvar dropStartY,dropEndY;\r\n\r\nvar allFrame = [], finalFrame = [];\r\nvar imgExportData = [];\r\nvar imgExportInfo = [];\r\nvar importImg = [];//已弃用\r\nvar importNum;//导入文件数量\r\nvar imgsName = [], imgsNameNew = [];//已弃用\r\nvar createrType = \"frame\";//已弃用\r\nvar colorWmb = \"#000000\", sizeWmb = 1, numWmb = 4;//伪描边相关\r\nvar inView = {//声明视图大小和背景颜色信息，从主线程获取后更新\r\n  w: 0,\r\n  h: 0,\r\n  x: 0,\r\n  y: 0,\r\n  view: '',\r\n  bg: '',\r\n  s: 1,\r\n};\r\nvar tabPage = 1;//切换tab时动态发送给主线程，以根据tab来判断执不执行，减少性能损耗\r\nvar tab = ['tab-1', 'tab-2', 'tab-3', 'tab-4', 'tab-5'];//tab序号\r\nvar main = ['top', 'page', 'btn'];//核心区划分类型\r\nvar lightTheme = JSON.parse(`{\r\n\"mainColor\":\"#2b2b2b\",\r\n\"mainColor2\":\"#378360\",\r\n\"mainColor3\":\"#000\",\r\n\"boxBod\":\"#aeaeae\",\r\n\"boxBak\":\"#eeeeee\",\r\n\"boxGry\":\"#dddddd\",\r\n\"liColor1\":\"#d03b3b\",\r\n\"tabBR\":\"0 8px 8px 8px\",\r\n\"keepTrue\":\"#d03b3b\",\r\n\"keepFalse\":\"#a8a8a8\",\r\n\"keep\":\"var(--keepTrue)\",\r\n\"link\":\"#4e7075\",\r\n\"map-line-x\":\"50%\",\r\n\"map-line-y\":\"50%,\",\r\n\"map-bg\":\"#c5c5c5\"\r\n}`)\r\nvar darkTheme = JSON.parse(`{\r\n\"mainColor\":\"#acacac\",\r\n\"mainColor2\":\"#378360\",\r\n\"mainColor3\":\"#fff\",\r\n\"boxBod\":\"#5d5d5d\",\r\n\"boxBak\":\"#202020\",\r\n\"boxGry\":\"#393939\",\r\n\"liColor1\":\"#d03b3b\",\r\n\"tabBR\":\"0 8px 8px 8px\",\r\n\"keepTrue\":\"#d03b3b\",\r\n\"keepFalse\":\"#5d5d5d\",\r\n\"keep\":\"var(--keepTrue)\",\r\n\"link\":\"#4e7075\",\r\n\"map-line-x\":\"50%\",\r\n\"map-line-y\":\"50%,\",\r\n\"map-bg\":\"#202020\"\r\n}`)\r\nvar styleKey = Object.keys(lightTheme);//主题色键值\r\nvar styleValue = Object.values(lightTheme);//主题色色值\r\nvar styleKey2 = Object.keys(darkTheme);//主题色键值\r\nvar styleValue2 = Object.values(darkTheme);//主题色色值\r\nvar scaleCenter = \"CC\", scaleType = \"WH\";//等比缩放默认从中心且按原宽高缩放\r\nvar searchType = \"Text\", searchPick = 1, searchArea = \"Page\", searchInfo = '', searchReInfo = '',searchKey = 'isV',searchSameType = [];\r\nvar sidePageMove;//侧边栏悬停底部自动滚动的计时器\r\nvar tableData;//行列数据\r\nvar userTableData;//填充表格或数据流用的数据\r\nvar tool1 = 0, tool2 = 0, tool3 = 0, tool4 = 0, tool5 = 0, tool6 = 0;//记录侧边栏工具类型标题点击次数，实现checkbox效果\r\nvar editorNum = 1, editorPick = 1,editorCopy = false;\r\nvar mixType = [],mixAdd = 1,mixClone = 1;\r\nvar docInfo;\r\nvar exportNum = 0;//导出序号\r\n\r\nclass userexcel extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill=\"var(--mainColor)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.0549 10H9C6.79086 10 5 11.7909 5 14V32C5 34.2091 6.79086 36 9 36H31C33.2091 36 35 34.2091 35 32V20C32.8567 20 30.8884 19.2508 29.3427 18H17V12H26.0549C26.0186 11.6717 26 11.338 26 11C26 10.662 26.0186 10.3283 26.0549 10ZM9 12H15V18H7V14C7 12.8954 7.89543 12 9 12ZM7 20H15L15 26H7V20ZM7 28H15V34H9C7.89543 34 7 33.1046 7 32V28ZM17 28V34H31C32.1046 34 33 33.1046 33 32V28H17ZM17 20L17 26H33V20H17Z\" />\r\n        <path fill=\"var(--mainColor)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35 18C38.866 18 42 14.866 42 11C42 7.13401 38.866 4 35 4C31.134 4 28 7.13401 28 11C28 14.866 31.134 18 35 18ZM35 6C35.5523 6 36 6.44772 36 7V10H39C39.5523 10 40 10.4477 40 11C40 11.5523 39.5523 12 39 12H36V15C36 15.5523 35.5523 16 35 16C34.4477 16 34 15.5523 34 15V12H31C30.4477 12 30 11.5523 30 11C30 10.4477 30.4477 10 31 10L34 10V7C34 6.44772 34.4477 6 35 6Z\" \"/>\r\n      </svg>\r\n    `;\r\n  }\r\n}\r\nclass userimg extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill=\"var(--mainColor)\" d=\"M35,18C38.866,18,42,14.866,42,11C42,7.13401,38.866,4,35,4C31.134,4,28,7.13401,28,11C28,14.866,31.134,18,35,18ZM35,6C35.5523,6,36,6.44772,36,7L36,10L39,10C39.5523,10,40,10.447700000000001,40,11C40,11.552299999999999,39.5523,12,39,12L36,12L36,15C36,15.5523,35.5523,16,35,16C34.4477,16,34,15.5523,34,15L34,12L31,12C30.4477,12,30,11.552299999999999,30,11C30,10.447700000000001,30.4477,10,31,10L34,10L34,7C34,6.44772,34.4477,6,35,6Z\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\r\n        <path fill=\"var(--mainColor)\" d=\"M5,14L5,32C5,34.2091,6.79086,36,9,36L31,36C33.2091,36,35,34.2091,35,32L35,20L33,20L33,29.5L31.4848,29.5Q30.9924,29.5,30.6922,29.1097L27.5916,25.0789Q26.7999,24.0497,25.5076,23.9225Q24.2154,23.795299999999997,23.2382,24.6503L21.7345,25.966L18.7349,21.0576Q17.8134,19.54967,16.047800000000002,19.624670000000002Q14.28213,19.69966,13.4918,21.2803L9.15836,29.9472Q8.881969999999999,30.5,8.26393,30.5L7,30.5L7,14Q7,13.17159,7.585789999999999,12.585799999999999Q8.17158,12,9,12L26.0549,12L26.0549,10L9,10C6.79086,10,5,11.7909,5,14ZM7.0359,32.5Q7.26795,34,9,34L31,34Q33,34,33,32L33,31.5L31.4848,31.5Q30.0076,31.5,29.1069,30.3291L26.0063,26.2983Q25.7424,25.9553,25.3117,25.9129Q24.8809,25.8705,24.5552,26.1555L21.2655,29.034L17.028399999999998,22.1005Q16.7212,21.5979,16.1326,21.6229Q15.5441,21.6479,15.2807,22.174799999999998L10.94721,30.8416Q10.11804,32.5,8.26393,32.5L7.0359,32.5ZM27,17.5C27,19.433,25.433,21,23.5,21C21.567,21,20,19.433,20,17.5C20,15.567,21.567,14,23.5,14C25.433,14,27,15.567,27,17.5Z\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\r\n      </svg>\r\n      `;\r\n  }\r\n}\r\nclass userfiles extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fill=\"var(--mainColor)\" d=\"M35,18C38.866,18,42,14.866,42,11C42,7.13401,38.866,4,35,4C31.134,4,28,7.13401,28,11C28,14.866,31.134,18,35,18ZM35,6C35.5523,6,36,6.44772,36,7L36,10L39,10C39.5523,10,40,10.447700000000001,40,11C40,11.552299999999999,39.5523,12,39,12L36,12L36,15C36,15.5523,35.5523,16,35,16C34.4477,16,34,15.5523,34,15L34,12L31,12C30.4477,12,30,11.552299999999999,30,11C30,10.447700000000001,30.4477,10,31,10L34,10L34,7C34,6.44772,34.4477,6,35,6Z\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\r\n        <path fill=\"var(--mainColor)\" d=\"M5,14L5,32C5,34.2091,6.79086,36,9,36L31,36C33.2091,36,35,34.2091,35,32L35,20L33,20L33,32Q33,34,31,34L9,34Q7,34,7,32L7,14Q7,13.17159,7.585789999999999,12.585799999999999Q8.17158,12,9,12L24.0549,12L26.0549,12L26.0549,10L9,10C6.79086,10,5,11.7909,5,14Z\" fill-opacity=\"1\"/>\r\n        <path fill=\"var(--mainColor)\" d=\"M8,19.47754L8,21.15603L9.64144,21.15603L9.64144,19.47754L8,19.47754ZM10.75148,13L10.75148,14.17021L12.2394,14.17021L12.2394,13L10.75148,13ZM9.70048,21.735219999999998L9.70048,23L10.3854,23C10.97585,23,11.42458,22.846330000000002,11.755230000000001,22.51537C12.074069999999999,22.19622,12.2394,21.735219999999998,12.2394,21.13239L12.2394,15.00946L10.7869,15.00946L10.7869,21.03782C10.7869,21.28605,10.73967,21.46336,10.645199999999999,21.56974C10.55072,21.687939999999998,10.39721,21.735219999999998,10.19646,21.735219999999998L9.70048,21.735219999999998ZM13.939879999999999,20.71868C14.365,21.06147,14.920020000000001,21.226950000000002,15.62856,21.226950000000002C16.360709999999997,21.226950000000002,16.95115,21.06147,17.4117,20.71868C17.86044,20.37589,18.096600000000002,19.89125,18.096600000000002,19.25295C18.096600000000002,18.74468,17.9431,18.34279,17.63607,18.04728C17.32904,17.76359,16.86849,17.574469999999998,16.25443,17.47991L15.53408,17.37352C15.25067,17.33806,15.04992,17.26714,14.93183,17.16076C14.81374,17.06619,14.7547,16.92435,14.7547,16.735219999999998C14.7547,16.5461,14.82555,16.38061,14.99088,16.26241C15.14439,16.14421,15.36876,16.08511,15.67579,16.08511C15.97102,16.08511,16.20719,16.14421,16.37252,16.26241C16.53784,16.38061,16.63231,16.5461,16.63231,16.75886L16.63231,16.79433L17.99034,16.79433L17.99034,16.723399999999998C17.99034,16.39244,17.884059999999998,16.08511,17.69512,15.81324C17.506169999999997,15.54137,17.234569999999998,15.3286,16.8803,15.17494C16.52603,15.02128,16.12453,14.93853,15.67579,14.93853C15.00268,14.93853,14.447669999999999,15.11584,14.02254,15.45863C13.59742,15.80142,13.38486,16.26241,13.38486,16.84161C13.38486,17.3617,13.52657,17.75177,13.82179,18.02364C14.10521,18.30733,14.565750000000001,18.49645,15.17982,18.59102L15.82931,18.697400000000002C16.13634,18.74468,16.360709999999997,18.82742,16.50242,18.92199C16.63231,19.02837,16.70317,19.17021,16.70317,19.35934C16.70317,19.59574,16.6087,19.76123,16.431559999999998,19.87943C16.242620000000002,19.99764,15.99463,20.04492,15.67579,20.04492C15.36876,20.04492,15.13258,19.98582,14.94364,19.85579C14.7547,19.72577,14.67203,19.54846,14.67203,19.31206L14.67203,19.288420000000002L13.3022,19.288420000000002L13.3022,19.3357C13.3022,19.91489,13.514759999999999,20.37589,13.939879999999999,20.71868ZM19.6672,20.60047C20.1159,21.026,20.7182,21.226950000000002,21.4976,21.226950000000002C22.2534,21.226950000000002,22.855600000000003,21.026,23.304299999999998,20.60047C23.741300000000003,20.18676,23.965600000000002,19.53664,23.965600000000002,18.65012L23.965600000000002,17.50355C23.965600000000002,16.62884,23.741300000000003,15.99054,23.304299999999998,15.565010000000001C22.855600000000003,15.151299999999999,22.2534,14.93853,21.4976,14.93853C20.7182,14.93853,20.1159,15.151299999999999,19.6672,15.565010000000001C19.2185,15.99054,19.0059,16.62884,19.0059,17.50355L19.0059,18.65012C19.0059,19.53664,19.2185,20.18676,19.6672,20.60047ZM22.513199999999998,18.6383C22.513199999999998,19.501179999999998,22.1707,19.92671,21.4976,19.92671C20.8009,19.92671,20.458399999999997,19.501179999999998,20.458399999999997,18.6383L20.458399999999997,17.52719C20.458399999999997,16.67612,20.8009,16.23877,21.4976,16.23877C22.1707,16.23877,22.513199999999998,16.67612,22.513199999999998,17.52719L22.513199999999998,18.6383ZM25,15.00946L25,21.156010000000002L26.4642,21.156010000000002L26.4642,17.32623C26.4642,16.98344,26.5469,16.71159,26.7358,16.52246C26.9248,16.33334,27.161,16.23877,27.4445,16.23877C27.7279,16.23877,27.964,16.33334,28.1411,16.52246C28.3064,16.71159,28.4009,16.98344,28.4009,17.32623L28.4009,21.156010000000002L29.8652,21.156010000000002L29.8652,17.14893C29.8652,16.46335,29.6882,15.93143,29.3457,15.52954C28.9914,15.13947,28.5072,14.93854,27.8813,14.93854C27.5979,14.93854,27.3382,14.99762,27.0784,15.104C26.8186,15.21039,26.606,15.36406,26.4288,15.565L26.4288,15.00946L25,15.00946Z\"  fill-opacity=\"1\"/>\r\n        <path fill=\"var(--mainColor)\" d=\"M8,30.14783L8,32L9.70403,32L9.70403,30.14783L8,30.14783ZM14.105080000000001,32L15.68652,32L13.749559999999999,28.45217L15.57618,25.21739L13.98249,25.21739L13.03853,27.14783L11.98424,25.21739L10.39054,25.21739L12.19264,28.50435L10.28021,32L11.87391,32L12.9282,29.86087L14.105080000000001,32ZM16.458849999999998,25.21739L16.458849999999998,32L17.97899,32L17.97899,27.77391C17.97899,27.39565,18.064799999999998,27.09565,18.2609,26.886960000000002C18.4448,26.67826,18.689999999999998,26.57391,18.996499999999997,26.57391C19.2907,26.57391,19.523600000000002,26.67826,19.7075,26.886960000000002C19.8914,27.09565,19.9895,27.38261,19.9895,27.77391L19.9895,32L21.5096,32L21.5096,27.73478C21.5096,27.39565,21.595399999999998,27.1087,21.7793,26.9C21.9632,26.6913,22.208399999999997,26.57391,22.5271,26.57391C22.8214,26.57391,23.054299999999998,26.67826,23.2382,26.886960000000002C23.4221,27.09565,23.5201,27.38261,23.5201,27.77391L23.5201,32L25.0403,32L25.0403,27.57826C25.0403,26.82174,24.8441,26.23478,24.4641,25.7913C24.0841,25.36087,23.5569,25.13913,22.8827,25.13913C22.171599999999998,25.13913,21.5709,25.42609,21.0806,25.98696C20.700499999999998,25.42609,20.161099999999998,25.13913,19.4501,25.13913C19.155900000000003,25.13913,18.886200000000002,25.204349999999998,18.616500000000002,25.32174C18.3468,25.45217,18.1261,25.62174,17.94221,25.83043L17.94221,25.21739L16.458849999999998,25.21739ZM26.8669,31.465220000000002C27.2102,31.83043,27.6883,32,28.3012,32L29,32L29,30.60435L28.4851,30.60435C28.2645,30.60435,28.1173,30.55217,28.0193,30.43478C27.9212,30.31739,27.8844,30.12174,27.8844,29.834780000000002L27.8844,23L26.3643,23L26.3643,29.93913C26.3643,30.60435,26.5236,31.113039999999998,26.8669,31.465220000000002Z\" fill-opacity=\"1\"/>\r\n      </svg>\r\n    `;\r\n  }\r\n}\r\nclass tagsclose extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 10 10\">\r\n            <g>\r\n                <rect x=\"0\" y=\"0\" width=\"10\" height=\"10\" rx=\"5\" fill=\"#000000\" fill-opacity=\"0.5\"/>\r\n                <g transform=\"matrix(0.7071067690849304,0.7071067690849304,-0.7071067690849304,0.7071067690849304,2.575643857138118,-3.075268943922481)\">\r\n                    <g>\r\n                        <rect x=\"7.020312309265137\" y=\"1.5714426040649414\" width=\"0.8081187009811401\" height=\"4.848711967468262\" rx=\"0.40405935049057007\" fill=\"#D8D8D8\" fill-opacity=\"1\"/>\r\n                    </g>\r\n                    <g transform=\"matrix(0,1,-1,0,13.4404296875,-6.256994247436523)\">\r\n                        <rect x=\"9.848711967468262\" y=\"3.5917177200317383\" width=\"0.8081187009811401\" height=\"4.848711967468262\" rx=\"0.40405935049057007\" fill=\"#D8D8D8\" fill-opacity=\"1\"/>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    `;\r\n  }\r\n}\r\nclass tagssearch extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n            <defs>\r\n                <clipPath id=\"master_svg0_24_01708\"><rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" rx=\"0\"/></clipPath>\r\n            </defs>\r\n            <g clip-path=\"url(#master_svg0_24_01708)\">\r\n                <g>\r\n                    <ellipse cx=\"12\" cy=\"11\" rx=\"8.5\" ry=\"8.5\" fill-opacity=\"0\" stroke-opacity=\"1\" stroke=\"var(--mainColor)\" fill=\"none\" stroke-width=\"3\"/>\r\n                </g>\r\n                <g>\r\n                    <path d=\"M19.06097,16.93965L19.06066,16.93934Q18.956194,16.83487,18.833355,16.7528Q18.710516,16.67072,18.574025,16.61418Q18.437534,16.55764,18.292635,16.52882Q18.147737,16.5,18,16.5Q17.852263,16.5,17.707364,16.52882Q17.562466,16.55764,17.425975,16.61418Q17.289484,16.67072,17.166645,16.7528Q17.043806,16.83487,16.93934,16.93934Q16.83487,17.043806,16.7528,17.166645Q16.67072,17.289484,16.61418,17.425975Q16.55764,17.562466,16.52882,17.707364Q16.5,17.852263,16.5,18Q16.5,18.147737,16.52882,18.292635Q16.55764,18.437534,16.61418,18.574025Q16.67072,18.710516,16.7528,18.833355Q16.83487,18.956194,16.93934,19.06066L16.93965,19.06097L20.43934,22.56066Q20.54381,22.66513,20.66664,22.7472Q20.78948,22.82928,20.92597,22.88582Q21.06247,22.94236,21.20736,22.97118Q21.35226,23,21.5,23Q21.64774,23,21.79264,22.97118Q21.93753,22.94236,22.07403,22.88582Q22.21052,22.82928,22.33336,22.7472Q22.45619,22.66513,22.56066,22.56066Q22.66513,22.45619,22.7472,22.33336Q22.82928,22.21052,22.88582,22.07403Q22.94236,21.93753,22.97118,21.79263Q23,21.64774,23,21.5Q23,21.35226,22.97118,21.20736Q22.94236,21.06247,22.88582,20.92597Q22.82928,20.78948,22.7472,20.66664Q22.66513,20.54381,22.56066,20.43934L19.06097,16.93965Z\" fill-rule=\"evenodd\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    `;\r\n  }\r\n}\r\nclass tagssearchclose extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 10 10\">\r\n            <g>\r\n                <rect x=\"1\" y=\"1\" width=\"8\" height=\"8\" rx=\"4\" fill=\"var(--boxBod)\" fill-opacity=\"0.5\"/>\r\n                <g transform=\"matrix(0.7071067690849304,0.7071067690849304,-0.7071067690849304,0.7071067690849304,2.575643857138118,-3.075268943922481)\">\r\n                    <g>\r\n                        <rect x=\"7.020312309265137\" y=\"1.5714426040649414\" width=\"0.8081187009811401\" height=\"4.848711967468262\" rx=\"0.40405935049057007\" fill=\"var(--boxBak)\" fill-opacity=\"1\"/>\r\n                    </g>\r\n                    <g transform=\"matrix(0,1,-1,0,13.4404296875,-6.256994247436523)\">\r\n                        <rect x=\"9.848711967468262\" y=\"3.5917177200317383\" width=\"0.8081187009811401\" height=\"4.848711967468262\" rx=\"0.40405935049057007\" fill=\"var(--boxBak)\" fill-opacity=\"1\"/>\r\n                    </g>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    `;\r\n  }\r\n}\r\nclass btnadd extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 17 17\">\r\n        <g>\r\n            <g>\r\n                <rect x=\"7.5\" y=\"3.5\" width=\"2\" height=\"10\" rx=\"0\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/>\r\n            </g>\r\n            <g>\r\n                <rect x=\"3.5\" y=\"7.5\" width=\"10\" height=\"2\" rx=\"0\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/>\r\n            </g>\r\n            <g>\r\n                <ellipse cx=\"8.5\" cy=\"8.5\" rx=\"8\" ry=\"8\" fill-opacity=\"0\" stroke-opacity=\"1\" stroke=\"var(--mainColor)\" fill=\"none\" stroke-width=\"1\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n    `;\r\n  }\r\n}  \r\nclass btnclose extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 17 17\">\r\n        <g>\r\n            <g>\r\n                <rect x=\"3.5\" y=\"7.5\" width=\"10\" height=\"2\" rx=\"0\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/>\r\n            </g>\r\n            <g>\r\n                <ellipse cx=\"8.5\" cy=\"8.5\" rx=\"8\" ry=\"8\" fill-opacity=\"0\" stroke-opacity=\"1\" stroke=\"var(--mainColor)\" fill=\"none\" stroke-width=\"1\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n    `;\r\n  }\r\n} \r\nclass btncopy extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.innerHTML = `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 11 11\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M5,2L4,2L4,4L2,4L2,5L4,5L4,7L5,7L5,5L7,5L7,4L5,4L5,2Z\" fill-rule=\"evenodd\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M0,2.5L0,6.5Q0,7.53553,0.732233,8.26777Q1.29574,8.83127,2.03888,8.96112Q2.16872,9.70426,2.73223,10.2678Q3.46447,11,4.5,11L8.5,11Q9.53553,11,10.2678,10.2678Q11,9.53553,11,8.5L11,4.5Q11,3.46447,10.2678,2.73223Q9.70426,2.16872,8.96112,2.03888Q8.83127,1.29574,8.26777,0.732233Q7.53553,0,6.5,0L2.5,0Q1.46447,0,0.732233,0.732233Q0,1.46447,0,2.5ZM9,3.08099L9,6.5Q9,7.53553,8.26777,8.26777Q7.53553,9,6.5,9L3.08099,9Q3.18864,9.30996,3.43934,9.56066Q3.87868,10,4.5,10L8.5,10Q9.12132,10,9.56066,9.56066Q10,9.12132,10,8.5L10,4.5Q10,3.87868,9.56066,3.43934Q9.30996,3.18864,9,3.08099ZM1.43934,7.56066Q1,7.12132,1,6.5L1,2.5Q1,1.87868,1.43934,1.43934Q1.87868,1,2.5,1L6.5,1Q7.12132,1,7.56066,1.43934Q8,1.87868,8,2.5L8,6.5Q8,7.12132,7.56066,7.56066Q7.12132,8,6.5,8L2.5,8Q1.87868,8,1.43934,7.56066Z\" fill-rule=\"evenodd\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('user-excel', userexcel);\r\ncustomElements.define('user-img', userimg);\r\ncustomElements.define('user-files', userfiles);\r\ncustomElements.define('tags-close', tagsclose);\r\ncustomElements.define('tags-search', tagssearch);\r\ncustomElements.define('tags-search-close', tagssearchclose);\r\ncustomElements.define('btn-add', btnadd);\r\ncustomElements.define('btn-close', btnclose);\r\ncustomElements.define('btn-copy', btncopy);\r\n\r\nwindow.onload = function () {\r\n  viewPage(1)\r\n  /*/打开侧边栏\r\n  document.getElementById(\"btn-side-0\").checked = true;\r\n  document.getElementById('btn-side-text-0').style.pointerEvents = 'none';\r\n  sidePage()\r\n  /**/\r\n}\r\n\r\n\r\nwindow.onmessage = (message) => {\r\n  \r\n  if(message.data && message.data.pluginMessage && message.data.pluginMessage.pluginMessage){\r\n    //console.log(message.data)\r\n    //console.log(message.data.pluginMessage.pluginMessage)\r\n    /*figma*/\r\n    var pluginDatas = message.data.pluginMessage.pluginMessage;\r\n    /*mastergo*/\r\n    //var pluginDatas = message.data;\r\n\r\n    var info = pluginDatas[0];\r\n    var type = pluginDatas[1];\r\n\r\n    if (info == 'light') {\r\n      btnSetTheme.checked = false;\r\n      setTheme(btnSetTheme)\r\n    }\r\n\r\n    if (info == 'sidePage') {\r\n      if (document.getElementById(\"page-main-1\").style.display == 'flex' && document.getElementById(\"zzz\").style.display !== 'block'  ) {\r\n        document.getElementById(\"btn-side-0\").checked = true\r\n        sidePage()\r\n      }\r\n    }\r\n\r\n    if (info == 'noSidePage') {\r\n      //document.getElementById(\"btn-side-0\").checked = false\r\n      //sidePage()\r\n    }\r\n\r\n    if (type == 'imgURLtoWH') {\r\n      imgURLtoWH(info)\r\n      //console.log(imgURLtoWH(info))\r\n        //message([imgURLtoWH(info), 'imgWH'])\r\n    }\r\n\r\n    if (type == 'noiseWH') {\r\n      var noiseURL = noise()\r\n      setTimeout(() => {\r\n        message([noiseURL, 'noiseURL'])\r\n      }, 100)\r\n      //console.log(noiseURL)\r\n    }\r\n\r\n    if (type == 'skewData') {\r\n      //console.log(info)\r\n      document.getElementById('slider-skewW').value = info.x;\r\n      document.getElementById('slider-skewH').value = info.y;\r\n      document.getElementById('input-num-skewW').value = info.x;\r\n      document.getElementById('input-num-skewH').value = info.y;\r\n      document.getElementById('slider-scaleW').value = info.w;\r\n      document.getElementById('slider-scaleH').value = info.h;\r\n      document.getElementById('input-num-scaleW').value = info.w;\r\n      document.getElementById('input-num-scaleH').value = info.h;\r\n    }\r\n\r\n    if (type == 'frameExport') {\r\n      if (document.getElementById(\"select-export\").value == \"toIMG\") {\r\n        \r\n        //console.log(imgExportInfo)\r\n        addExport(imgExportInfo,info[0],info[1]);\r\n        imgExportInfo.push(...info[0]);\r\n        if (info == '') {\r\n          exportInfo.innerHTML = \"[-- 未选中容器 --]\"\r\n        } else {\r\n          exportInfo.innerHTML = '<span style=\"color:#ff2222; font-weight:700;\">[-- 加载中，请稍后 --]</span>'\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type == 'imgExport') {\r\n      //console.log(info)\r\n      if (document.getElementById(\"select-export\").value == \"toIMG\") {\r\n        //imgExportData.length = 0\r\n        imgDataSet(imgExportData,info[0],info[1])\r\n        //console.log(imgExportData)\r\n        exportInfo.innerHTML = '[-- 加载完成 --]'\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (type == 'createrMap') {\r\n      inView.w = info.w\r\n      inView.h = info.h\r\n      inView.x = info.x\r\n      inView.y = info.y\r\n      inView.view = info.view\r\n      inView.bg = info.bg\r\n      createrMap(info, 6)\r\n      setTimeout(() => {\r\n        message([\"\", \"hasMap\"])\r\n      }, 100)\r\n    }\r\n\r\n    if (type == 'hasView') {\r\n      message(['', 'hasView'])\r\n      console.log('getHasView')\r\n    }\r\n\r\n    if (type == 'reMap') {\r\n      setTimeout(() => {\r\n        message(['', 'reMap'])\r\n        console.log('reMap')\r\n      }, 200)\r\n\r\n    }\r\n\r\n    if (type == 'toTool') {\r\n      //console.log(info)\r\n      setTimeout(() => {\r\n        if (info == 'PEN' || info == 'BOOLEAN_OPERATION') {\r\n          document.getElementById(\"矢量工具\").scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n        if (info == 'table') {\r\n          document.getElementById(\"表格工具\").scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n        if (info == 'image' || info == 'skew') {\r\n          document.getElementById(\"topView\").scrollIntoView({ behavior: \"smooth\" })\r\n        }\r\n        if (info == 'text') {\r\n          //document.getElementById(\"容器工具\").scrollIntoView({behavior:\"smooth\"})\r\n        }\r\n      }, 500)\r\n\r\n\r\n    }\r\n\r\n    if (type == 'wmbEffects') {\r\n      var rehex = document.getElementById(\"input-hex-wmb\");\r\n      var recolor = document.getElementById(\"input-color-wmb\");\r\n      var renum = document.getElementById(\"wmbNum\");\r\n      var resize = document.getElementById(\"input-size-wmb\");\r\n      if (info.some((arr, index) => arr[0] !== info[0][0])) {\r\n        //存在多颜色\r\n        rehex.value = \"多值\"\r\n        //recolor.value = \"#000000\"\r\n      } else {\r\n        rehex.value = info[0][0]\r\n        recolor.value = info[0][0]\r\n        colorWmb = info[0][0]\r\n      }\r\n      if (info.some((arr, index) => arr[1] !== info[0][1])) {\r\n        //存在多数量\r\n        renum.value = \"?\"\r\n      } else {\r\n        renum.value = info[0][1]\r\n        numWmb = info[0][1]\r\n      }\r\n      if (info.some((arr, index) => arr[2] !== info[0][2])) {\r\n        //存在多大小\r\n        resize.value = \"多值\"\r\n      } else {\r\n        resize.value = info[0][2]\r\n        sizeWmb = info[0][2]\r\n      }\r\n    }\r\n\r\n    if (type == 'getFind') {\r\n      document.getElementById('input-search-all').value = info;\r\n      document.getElementById('input-search-pick').value = 1;\r\n    }\r\n  \r\n    if (type == 'hasStyle') {\r\n      if(info){\r\n        document.getElementById('noStyle').checked = true;\r\n      } else {\r\n        document.getElementById('noStyle').checked = false;\r\n      }\r\n      \r\n    }\r\n\r\n    if (type == 'hasStyleTable') {\r\n      if(info == true){\r\n        document.getElementById('noStyleTable').checked = true;\r\n      } else if ( info == false) {\r\n        document.getElementById('noStyleTable').checked = false;\r\n      } else {\r\n        message([info,'moveStyleTable'])\r\n        //console.log(info)\r\n      }\r\n      \r\n    }\r\n  \r\n    if (type == 'toTab'){\r\n      viewPage(info)\r\n    }\r\n\r\n    if (type == 'searchInfo') {\r\n      if(info){\r\n        if(info.length > 10){\r\n          infos = info.substring(0, 10) + '...';\r\n          document.getElementById('search-same-node').innerHTML = '已选图层：<span style=\"color: var(--boxBod);\">' + infos + '</span>'\r\n        } else {\r\n          document.getElementById('search-same-node').innerHTML = '已选图层：<span style=\"color: var(--boxBod);\">' + info + '</span>'\r\n        }\r\n        \r\n      } else {\r\n        document.getElementById('search-same-node').innerHTML = `<span style=\"color: var(--boxBod);\">*请选中一个对象</span>`\r\n      }\r\n      if(info == 'noOnly'){\r\n        document.getElementById('search-same-node').innerHTML = `<span style=\"color: var(--liColor1);\">*选中多个对象无效</span>`\r\n      }\r\n      \r\n    }\r\n\r\n    if ( type == 'getNodeStyle') {\r\n      \r\n      if(info.length > 0){\r\n        document.getElementById('reStyleSet').checked = false;\r\n        document.getElementById('getstyle-node-1').innerHTML = '';\r\n        document.getElementById('getstyle-node-2').innerHTML = '';\r\n        //console.log(info)\r\n        var btn1 = '',btn2 = '',btn3 = '',btn4 = '';\r\n        for ( var i = 0; i < info.length; i++){\r\n          if(info[i][2] == 'NEW'){\r\n            btn1 = `<div class=\"btn-style-set\" style=\"--color-btn1:#00BA7944;--color-btn2:#00BA7988;\" onclick=\"message(['`+ info[i][1] +`','newStyle'])\">新建</div>`\r\n          } else {\r\n            btn1 = '';\r\n          }\r\n          if( info[i][2] == 'DIFF'){\r\n            btn2 = `<div class=\"btn-style-set\" style=\"--color-btn1:#77777744;--color-btn2:#77777788; opacity:0.5\" onclick=\"message(['`+ info[i][1] +`','setDiffStyle'])\">覆盖</div>`\r\n            btn3 = `<div class=\"btn-style-set\" style=\"--color-btn1:#FF840044;--color-btn2:#FF840088;\" onclick=\"message(['`+ info[i][1] +`','linkStyle'])\">重链</div>`\r\n          } else {\r\n            btn2 = '';\r\n            btn3 = '';\r\n          }\r\n          \r\n          if( info[i][2] == 'OLD'){\r\n            document.getElementById('getstyle-node-2').innerHTML += '<div class=\"tag-style-info\" style=\" width:100%; height:30px; display:flex; align-items: center; justify-content: space-between;\">' + info[i][0] + '<div style=\"display:flex;gap:4px\"> ' + btn4 + '</div> </div>';\r\n          } else {\r\n            document.getElementById('getstyle-node-1').innerHTML += `<div class=\"tag-style-info\" style=\" width:100%; height:30px; display:flex; align-items: center; justify-content: space-between;\" ondblclick=\"message(['`+ info[i][1] +`','diffStylePick'])\">` + info[i][0] + '<div style=\"display:flex;gap:4px\"> ' + btn1 + btn2 + btn3 + '</div> </div>';\r\n          }\r\n          \r\n          if ( i == info.length - 1){\r\n            if(document.getElementById('getstyle-node-2').innerHTML == ''){\r\n              document.getElementById('getstyle-node-2').innerHTML = '----'\r\n            }\r\n            if(document.getElementById('getstyle-node-1').innerHTML == ''){\r\n              document.getElementById('getstyle-node-1').innerHTML = '----'\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        document.getElementById('reStyleSet').checked = true;\r\n      }\r\n    }\r\n\r\n    if ( type == 'hasLinkStyle') {\r\n      message(['reSend','reSend'])\r\n    }\r\n\r\n    if ( type == 'hasNewStyle') {\r\n      message([info,'reNewStyle'])\r\n    }\r\n\r\n    if ( type == 'hasSetLinkStyle') {\r\n        message([info,'linkStyle'])\r\n    }\r\n\r\n    if( type == 'getStyleGroup') {\r\n      if(info.length > 1){\r\n        var group = document.getElementById('stylegroup');\r\n        group.innerHTML = '';\r\n        var star = `<select id=\"select-stylegroup\" class=\"input-btn-skill\" name=\"样式组切换\" style=\" width: 18ch; color: var(--mainColor); font-size: 12;\"onchange=\"message([this.value,'reStyleGroup']);\">`\r\n        var option = ''\r\n        for (var i = info.length - 1; i >= 0; i--){\r\n          option += '<option value=\"' + info[i] + '\">' + info[i] + '</option>'\r\n        }\r\n        var end = '</select>'\r\n        group.innerHTML += star + option + end\r\n      } else {\r\n        var group = document.getElementById('stylegroup');\r\n        group.innerHTML = '';\r\n      }\r\n    }\r\n\r\n    if( type == 'styleLinkAndNew' ) {\r\n      if(info){\r\n\r\n        document.getElementById('styleLinkAndNew').style.display = \"flex\";\r\n      } else {\r\n\r\n        document.getElementById('styleLinkAndNew').style.display = \"none\";\r\n      }\r\n      \r\n    }\r\n\r\n    if ( type == 'tolink') {\r\n      document.getElementById('tab-' + info).click()\r\n    }\r\n\r\n    if ( type == 'getFrame'){\r\n      //console.log(111,dataText.value)\r\n      dataText.value = 'name\\tw\\th\\n'\r\n      info.forEach( item => {\r\n        dataText.value += item\r\n      })\r\n      \r\n      dataText.focus()\r\n      inputDataText()\r\n      //console.log(222,dataText.innerHTML)\r\n    }\r\n    \r\n    if ( type == 'hasreComponent') {\r\n      message([info,'reComponentText'])\r\n    }\r\n\r\n    if ( type == 'docInfo'){\r\n      if (info.length == 4 && info[1] !== info[2]){\r\n        docInfo = info[1] + '-' + info[2]  \r\n      } else {\r\n        docInfo = info[1]\r\n      }\r\n      if (info.length == 4 && info[3]*1 > 0 ){\r\n        exportInfo.innerHTML = \"[-- 已选中 \" + '<span style=\"color:#2AE02D; font-weight: 700;\">' + info[3] + \" </span>个对象 --]\"\r\n      } else if(info.length == 3 && info[2]*1 > 0){\r\n        exportInfo.innerHTML = \"[-- 已选中 \" + '<span style=\"color:#2AE02D; font-weight: 700;\">' + info[3] + \" </span>个对象 --]\"\r\n      } else {\r\n        exportInfo.innerHTML = \"[-- 未选中容器 --]\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//封装postmessage\r\nfunction message(data){\r\n  /*figma*/\r\n  parent.postMessage({pluginMessage:data},\"*\")\r\n  /*mastergo*/\r\n  //parent.postMessage(data,\"*\")\r\n}\r\n\r\n//设置主题\r\nfunction setTheme(e){\r\n  if(!e.checked){\r\n      console.log('浅色主题')\r\n      for (var i = 0; i < styleKey.length; i++) {\r\n        root.style.setProperty('--' + styleKey[i], styleValue[i])\r\n      }\r\n      document.body.style.filter = 'contrast(130%)';\r\n    } else {\r\n      console.log('深色主题')\r\n      for (var i = 0; i < styleKey2.length; i++) {\r\n        root.style.setProperty('--' + styleKey2[i], styleValue2[i])\r\n      }\r\n      document.body.style.filter = '';\r\n    }\r\n}\r\n\r\n//粘贴上传\r\nupFileByInput()\r\nfunction upFileByInput() {\r\n  dataText.addEventListener('keydown', function (event) {\r\n    if (event.key === 'Tab') {\r\n      dataTextTips.style.display = \"none\";\r\n      event.preventDefault(); // 阻止默认Tab行为\r\n      const start = this.selectionStart;\r\n      const end = this.selectionEnd;\r\n      const selectedText = this.value.substring(start, end);\r\n      const before = this.value.substring(0, start);\r\n      const after = this.value.substring(end, this.value.length);\r\n      this.value = before + '\\t' + selectedText + after; // 用4个空格替换Tab\r\n      this.selectionStart = this.selectionEnd = start + 4; // 设置光标位置\r\n    }\r\n  });\r\n\r\n  dataText.addEventListener('input', function () {\r\n    if (dataText.value == '') {\r\n      fileName.innerHTML = '[-- 暂无数据 --]';\r\n      anotherBtns2.style.display = \"none\";\r\n      anotherBtns3.style.display = \"none\";\r\n      dataTextTips.style.display = \"block\";\r\n    } else if (dataText.value.includes('name\\tw\\th') == true) {\r\n      inputDataText()\r\n    } else if (dataText.value.substring(0, 4) == \"<svg\") {\r\n      //console.log(dataText.value)\r\n      //var importSvg = []\r\n      processSVG(dataText.value)\r\n      //importSvg.push({svg:dataText.value})\r\n      //message([importSvg,'svgIm'])\r\n      notag()\r\n    } else {\r\n      fileName.innerHTML = '[-- 正在输入 --]';\r\n      //console.log('数据错误')\r\n      anotherBtns2.style.display = \"none\";\r\n      anotherBtns3.style.display = \"flex\";\r\n      dataTextTips.style.display = \"none\";\r\n      //console.log(dataText.value.substring(0, 3))\r\n    }\r\n  });\r\n}\r\n\r\nfunction inputDataText() {\r\n  fileName.innerHTML = '[-- 正在输入 --]';\r\n  anotherBtns2.style.display = \"flex\";\r\n  anotherBtns3.style.display = \"none\";\r\n  dataTextTips.style.display = \"none\";\r\n}\r\n\r\nfunction addDataText() {\r\n  fileName.innerHTML = '';\r\n  var newData = textToList(dataText.value.trim());//.replace(/\\s*([\\t\\n])\\s*/g,'$1')\r\n  autoUp.style.display = \"none\";\r\n  allFrame = newData;\r\n  addtag(newData);\r\n  anotherBtns4.style.display = \"flex\";\r\n  anotherBtns.style.display = \"flex\";\r\n  anotherBtns2.style.display = \"none\";\r\n  badData()\r\n}\r\n\r\n//将粘贴的内容处理成新数组\r\nfunction textToList(text) {\r\n  var lines = text.split('\\n');\r\n  var headers = lines[0].split('\\t');\r\n  var data = lines.slice(1).map(line => line.split('\\t').map(value => /^\\d+\\.?\\d*$/.test(value) ? parseFloat(value) : value));\r\n\r\n  return data.map(row => headers.reduce((acc, header, index) => {\r\n    acc[header] = row[index];\r\n    return acc;\r\n  }, {}));\r\n}\r\n\r\n//拖拽上传列表\r\nupFileByDrop()\r\nfunction upFileByDrop() {\r\n  upfileArea.addEventListener('dragover', function (e) {\r\n    notag()\r\n    fileName.innerHTML = '[-- 松手即可上传 --]';\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'copy';\r\n    tagsContainer1.style.boxShadow = '0px 0px 4px  rgb(128,128,128)';\r\n    autoUp.style.display = \"none\";\r\n  });\r\n\r\n  upfileArea.addEventListener('dragleave', function (e) {\r\n    createrType = \"frame\"\r\n    fileName.innerHTML = '[-- 暂无数据 --]';\r\n    if (autoUp.style.display == \"none\") {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      e.dataTransfer.dropEffect = 'copy';\r\n      tagsContainer1.style.boxShadow = '';\r\n      autoUp.style.display = \"block\";\r\n    }\r\n  });\r\n\r\n  upfileArea.addEventListener('drop', function (e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    tagsContainer1.style.boxShadow = '';\r\n    imgsName = []\r\n    imgsNameNew = []\r\n    importImg = []\r\n    importNum = 0;\r\n\r\n    var files = Array.from(e.dataTransfer.files).sort((a, b) => b.size - a.size);\r\n    var imgType = [\"png\", \"jpg\", \"jpeg\", \"webp\",\"jfif\"]\r\n    var excelType = [\"xlsx\", \"csv\"]\r\n    importNum = files.length;\r\n    message([importNum, \"importNum\"])\r\n    for (var i = 0; i < files.length; i++) {\r\n      var names = files[i].name.split(\".\")\r\n      if (imgType.some(type => type.includes(names[names.length - 1].toLowerCase()))) {\r\n        if (e.dataTransfer.files.length > 1) {\r\n          fileName.innerHTML = files[0].name.substring(0, 20) + '...等<span style=\"color:var(--liColor1)\">' + e.dataTransfer.files.length + '</span>个文件';\r\n        } else {\r\n          fileName.innerHTML = files[0].name;\r\n        }\r\n        imgsName.push({ name: names[names.length - 2] })\r\n        imgsNameNew.push({ name: names[names.length - 2] })\r\n        cutImg(files[i], names[names.length - 2])\r\n        if (i == files.length - 1) {\r\n          message([importImg, \"createrImage\"])\r\n        }\r\n        notag()\r\n\r\n\r\n      } else if (excelType.some(type => type.includes(names[names.length - 1].toLowerCase()))) {\r\n        fileName.innerHTML = files[0].name;\r\n        var reader = new FileReader();\r\n        reader.readAsArrayBuffer(files[0]);\r\n        reader.onload = function (e) {\r\n          var data = new Uint8Array(e.target.result);\r\n          //console.log(data)\r\n          var workbook = XLSX.read(data, { type: 'array' });\r\n\r\n          // 假设我们只读取第一个工作表\r\n          var wsname = workbook.SheetNames[0];\r\n          var ws = workbook.Sheets[wsname];\r\n\r\n          // 将工作表转换为JSON\r\n          var userData = XLSX.utils.sheet_to_json(ws);\r\n          allFrame = userData;\r\n          addtag(userData);\r\n          anotherBtns.style.display = \"flex\";\r\n          anotherBtns4.style.display = \"flex\";\r\n          badData()\r\n        };\r\n      } else {\r\n        fileName.innerHTML = '<span style=-\"color:var(--liColor1)\">含错误格式/来源';\r\n        //console.log(files[i].name)\r\n        addImg([files[i].name])\r\n        anotherBtns.style.display = \"none\";\r\n        anotherBtns2.style.display = \"none\";\r\n        anotherBtns3.style.display = \"flex\";\r\n    }\r\n    }\r\n\r\n\r\n    //console.log(imgsName)\r\n  });\r\n\r\n}\r\n\r\n//选择文件上传列表\r\nfunction upFileByExcel() {\r\n  var file = inputExcel.files[0];\r\n  var reader = new FileReader();\r\n\r\n  fileName.innerHTML = file.name;\r\n  autoUp.style.display = \"none\";\r\n\r\n  reader.onload = function (e) {\r\n\r\n    var data = new Uint8Array(e.target.result);\r\n    var workbook = XLSX.read(data, { type: 'array' });\r\n\r\n    // 只读取第一个工作表\r\n    var wsname = workbook.SheetNames[0];\r\n    var ws = workbook.Sheets[wsname];\r\n\r\n    // 将工作表转换为JSON\r\n    var userData = XLSX.utils.sheet_to_json(ws);\r\n    allFrame = userData;\r\n\r\n    addtag(userData)\r\n    anotherBtns.style.display = \"flex\";\r\n\r\n    badData()\r\n\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nfunction upFileByImg() {\r\n  //autoUp.style.display = \"none\";\r\n  var reader = new FileReader();\r\n  imgsName = []\r\n  imgsNameNew = []\r\n  importImg = []\r\n  importNum = 0;\r\n\r\n  var files = inputImg.files;\r\n  var imgType = [\"png\", \"jpg\", \"jpeg\", \"webp\"]\r\n  importNum = files.length;\r\n  message([importNum, \"importNum\"])\r\n  for (var i = 0; i < files.length; i++) {\r\n    var names = files[i].name.split(\".\")\r\n    if (imgType.some(type => type.includes(names[names.length - 1].toLowerCase()))) {\r\n      \r\n      if (files.length > 1) {\r\n        fileName.innerHTML = files[0].name.substring(0, 20) + '...等<span style=\"color:var(--liColor1)\">' + inputImg.files[0].length + '</span>个文件';\r\n      } else {\r\n        fileName.innerHTML = files[0].name.substring(0, 20);\r\n      }\r\n      imgsName.push({ name: names[names.length - 2] })\r\n      imgsNameNew.push({ name: names[names.length - 2] })\r\n      cutImg(files[i], names[names.length - 2])\r\n      if (i == files.length - 1) {\r\n        message([importImg, \"createrImage\"])\r\n      }\r\n      notag()\r\n    } else {\r\n      fileName.innerHTML = '<span style=\"color:var(--liColor1)\">含错误格式/来源</span>';\r\n      addImg([files[i].name])\r\n      autoUp.style.display = \"none\";\r\n      anotherBtns.style.display = \"none\";\r\n      anotherBtns2.style.display = \"none\";\r\n      anotherBtns3.style.display = \"flex\";\r\n    }\r\n    }\r\n}\r\n\r\n//判断错误数据\r\nfunction badData() {\r\n  if (tagsContainer1.innerHTML == \"\") {\r\n    anotherBtns.style.display = \"none\";\r\n    anotherBtns2.style.display = \"none\";\r\n    anotherBtns3.style.display = \"flex\";\r\n    anotherBtns4.style.display = \"flex\";\r\n    allFrame = [];\r\n    finalFrame = [];\r\n  }\r\n  for (var i = 0; i < allFrame.length; i++) {\r\n    if (document.getElementById('tag-' + i).innerHTML.includes('undefined')) {\r\n      fileName.innerHTML = '';\r\n      anotherBtns.style.display = \"none\";\r\n      anotherBtns2.style.display = \"none\";\r\n      anotherBtns3.style.display = \"flex\";\r\n      allFrame = [];\r\n      finalFrame = [];\r\n    }\r\n  }\r\n}\r\n\r\n//生成创建标签\r\nfunction addtag(userData) {\r\n\r\n  tagsContainer1.innerHTML = \"\";\r\n  for (var i = 0; i < userData.length; i++) {\r\n    var e = i + 1;\r\n    tagsContainer1.innerHTML += '<div class=\"tags\" id=\"tag-' + i + '\" style=\"display:block;\"><div class=\"tags-picks\">' + e + '. ' + userData[i].name + ' ' + userData[i].w + '×' + userData[i].h + '</div><tags-close onclick=\"this.parentNode.style.display = `none`\"; class=\"tags-close\"></tags-close></div>';\r\n  }\r\n\r\n}\r\n\r\n//生成导出标签\r\nfunction addExport(frameDataOld,frameDataNew,isNew) {\r\n  //console.log(frameData)\r\n  var index = 0;\r\n  if(isNew == 'new'){\r\n    exportNum = 0;\r\n    tagsContainer2.innerHTML = \"\";\r\n    frameData = frameDataNew;\r\n  }else{\r\n    frameData = frameDataNew;\r\n    index = exportNum//避免序号错乱\r\n  }\r\n\r\n  for (var i = 0; i < frameData.length; i++) {\r\n    var option = `<option value=\"` + frameData[i].type + `\">` + frameData[i].type + `</option>`\r\n    var options = \"\";\r\n    typeAllow.forEach(item => {\r\n      if( item != frameData[i].type){\r\n        options += `<option value=\"` + item + `\">` + item + `</option>`\r\n      }\r\n    })\r\n    var filetype = `<select id=\"imgtype-` + (i + index) + `\" class=\"input-btn-skill\" \r\n    name=\"文件格式\"\r\n    style=\"width: 60px; min-width: 60px; height:22px; width: 14ch; color: var(--mainColor); font-size: 12;\" \r\n    onchange=\"\r\n    var name = document.getElementById('fileName-' +` + (i + index) + `);\r\n    var text = name.value.split('.')[0] + '.' + this.value; \r\n    name.value = text;\r\n    message([[this.value,'` + frameData[i].id + `'],'exportTypeSet']);\r\n    imgExportData[`+ (i + index) +`].fileName = text \">\r\n      `+ option + options +`\r\n    </select>`\r\n    var info = `<div class=\"info\">\r\n      <span style=\"opacity: 0.5;\">` + ((i + index) + 1) + `.</span>\r\n      <input type=\"text\" class=\"input-nobg\" id=\"fileName-` + (i + index) + `\"value=\"` + frameData[i].name + `.` + frameData[i].type + `\" \r\n      onKeyPress=\"if(window.event.keyCode==13) this.blur()\" \r\n      onchange=\"imgExportData[`+ (i + index) +`].fileName = this.value; \r\n      var type = this.value.split('.')[1] ? this.value.split('.')[1].toLowerCase() : '';\r\n      if (type && typeAllow.includes(type)){\r\n      document.getElementById('imgtype-' +` + (i + index) + `).value = type;\r\n      } else {\r\n       this.value = this.value.split('.')[0] + '.' + document.getElementById('imgtype-' +` + (i + index) + `).value;\r\n      }\r\n      \r\n      //console.log(imgExportData.map(item => item.fileName))\"/>\r\n    </div>`;\r\n    var size = '<span id=\"imgsize-'+ (i + index) +'\" style=\"color:var(--mainColor2);opacity: 0.8;\"></span>';\r\n    var setsize = `<div class=\"input-btn-skill\" style=\"width: 60px; min-width: 60px; height:20px\" >\r\n      <input  id=\"exportSize-` + (i + index) + `\" type=\"text\" class=\"input-btn-skill\" \r\n      style=\"border:0px; height: 18px;\" value=\"` + frameData[i].s + `\" \r\n      onKeyPress=\"if(window.event.keyCode==13) this.blur()\" \r\n      onchange=\"message([[this.value,'` + frameData[i].id + `'],'exportSizeSet']);\r\n      imgExportData[`+ (i + index) +`].s = this.value;\r\n      console.log(imgExportData.map(item => item.s))\"/>\r\n      <div class=\"input-btn-skill\" style=\"border:0px; width:30px; border-radius: 0px ;background-color: var(--boxGry); opacity: 0.8;  color:var(--mainColor)\">k</div>\r\n      </div>`\r\n    var chk = `\r\n    <input id=\"chk-export-` + (i + index) + `\" type=\"checkbox\" style=\"display: none;\" />\r\n    <label for=\"chk-export-` + (i + index) + `\" class=\"chk-export-key set\" style=\"width:100%; display: flex;align-items: center;gap: 4px;\">\r\n      `+ info +`\r\n      <svg style=\"display:var(--export-edit);\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"14\" height=\"14\" viewBox=\"0 0 10 10\">\r\n          <g transform=\"matrix(0.8660253882408142,0.5,-0.5,0.8660253882408142,1.3172291698792833,-2.3877065935394057)\">\r\n            <path fill=\"var(--has)\" d=\"M8.4255957421875,1.264617919671875L8.4255957421875,6.264129638671875Q8.4255957421875,6.313379638671875,8.4159857421875,6.361679638671875Q8.4063857421875,6.409969638671875,8.3875357421875,6.455469638671875Q8.3686957421875,6.500969638671875,8.3413357421875,6.541909638671875Q8.3139757421875,6.582859638671875,8.2791557421875,6.617679638671875Q8.244325742187499,6.652499638671875,8.2033857421875,6.679859638671875Q8.1624357421875,6.707219638671875,8.1169357421875,6.726069638671875Q8.0714457421875,6.744909638671875,8.0231457421875,6.754519638671875Q7.9748457421875,6.764129638671875,7.9255957421875,6.764129638671875Q7.8640457421875,6.764129638671875,7.8043357421875,6.749199638671875L4.9928757421875,6.046379638671875Q4.9117407421875,6.026099638671875,4.8416217421875,5.980519638671875Q4.7715037421875,5.934939638671875,4.7200357421875,5.869019638671875Q4.6685667421875,5.803099638671875,4.6413517421875,5.724019638671875Q4.6141357421875,5.644939638671875,4.6141357421875,5.561309638671875Q4.6141357421875,5.512059638671875,4.6237427421875,5.463759638671875Q4.6333507421875,5.415469638671875,4.6521957421875,5.369969638671875Q4.6710417421875,5.324469638671875,4.6984007421875,5.283519638671875Q4.7257607421875,5.2425796386718755,4.7605827421875,5.207759638671876Q4.7954047421875,5.172929638671874,4.8363507421875,5.145579638671875Q4.8772967421875,5.118219638671874,4.9227937421875,5.099369638671876Q4.9682907421875,5.080519638671875,5.0165906421875,5.0709196386718745Q5.0648900421875,5.061309638671875,5.1141357421875,5.061309638671875Q5.1756846421875,5.061309638671875,5.2353957421875,5.0762396386718756L5.2358847421875,5.076359638671875L7.4255957421875,5.623749638671875L7.4255957421875,1.264129638671875Q7.4255957421875,1.214883938671875,7.435205742187501,1.166584538671875Q7.4448157421875,1.118284638671875,7.4636557421875,1.0727876386718749Q7.4825057421875005,1.027290638671875,7.5098657421875,0.986344638671875Q7.5372257421875,0.945398638671875,7.5720457421875,0.910576638671875Q7.6068657421875,0.875754638671875,7.6478157421875,0.848394638671875Q7.6887557421874995,0.821035638671875,7.7342557421875,0.802189638671875Q7.7797557421875005,0.783344638671875,7.8280557421875,0.7737366386718749Q7.8763557421875,0.764129638671875,7.9255957421875,0.764129638671875Q7.9748457421875,0.764129638671875,8.0231457421875,0.7737366386718749Q8.0714457421875,0.783344638671875,8.1169357421875,0.802189638671875Q8.1624357421875,0.821035638671875,8.2033857421875,0.848394638671875Q8.244325742187499,0.875754638671875,8.2791557421875,0.910576638671875Q8.3139757421875,0.945398638671875,8.3413357421875,0.986344638671875Q8.3686957421875,1.027290638671875,8.3875357421875,1.0727876386718749Q8.4063857421875,1.118284638671875,8.4159857421875,1.166584538671875Q8.4255957421875,1.214883938671875,8.4255957421875,1.264129638671875L8.4255957421875,1.264617919671875Z\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\r\n          </g>\r\n          <rect stroke=\"var(--boxBod)\" x=\"0.5\" y=\"0.5\" width=\"9\" height=\"9\" rx=\"1.5\" fill-opacity=\"0\" stroke-opacity=\"1\"  fill=\"none\" stroke-width=\"1\"/>\r\n      </svg>\r\n    </label>`\r\n    var node = document.createElement('div');\r\n    node.className = \"tags-exports\";\r\n    node.id = \"tags-exports-\" + (i + index);\r\n    node.innerHTML = '<div style=\"display:flex;gap:4px; align-items: center; width:100%;\"><div class=\"btn-text\" style=\"width:14px; height:14px; z-index:1;\"onclick=\"this.parentNode.parentNode.remove();imgExportData['+ (i + index) +`].fileName = ''\"><btn-close style=\" opacity: 0.6;\"></btn-close></div>` + chk + '</div><div class=\"set\">' + size + '<div style=\"display:flex; gap:4px\">'  + setsize + filetype + '</div></div>';\r\n    tagsContainer2.appendChild(node);\r\n    console.log(\"创建导出：第\" + (i + index))\r\n    exportNum++\r\n  }\r\n\r\n}\r\n//删除导出标签\r\nfunction noExport(e){\r\n  if(e == 'all'){\r\n    tagsContainer2.innerHTML = \"\";\r\n    imgExportData = [];\r\n    imgExportInfo = [];\r\n    exportNum = 0;\r\n    exportInfo.innerHTML = \"[-- 未选中容器 --]\"\r\n  }\r\n}\r\n\r\n//生成图片标签\r\nfunction addImg(imgsName) {\r\n  tagsContainer1.innerHTML = \"\";\r\n  var icon = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"20\" height=\"16\" viewBox=\"0 0 16 13.75732421875\">\r\n    <rect x=\"0\" y=\"11.75732421875\" width=\"16\" height=\"2\" rx=\"0\" fill=\"#6E6E6E\" fill-opacity=\"1\"/>\r\n    <g transform=\"matrix(0.7071067690849304,-0.7071067690849304,0.7071067690849304,0.7071067690849304,-2.3430887013528263,2.8286348765686853)\">\r\n      <rect x=\"2.242919921875\" y=\"4.24267578125\" width=\"6\" height=\"9\" rx=\"0\" fill=\"#6E6E6E\" fill-opacity=\"1\"/>\r\n      <path d=\"M5.242919921875,10.24267578125L6.727839921875,11.75775578125L8.242919921875,13.24267578125L6.727839921875,14.727595781249999L5.242919921875,16.24267578125L3.757999921875,14.727595781249999L2.242919921875001,13.24267578125L3.757999921875,11.75775578125L5.242919921875,10.24267578125Z\" fill=\"#6E6E6E\" fill-opacity=\"1\"/>\r\n    </g>\r\n  </svg>\r\n  `\r\n  for (var i = 0; i < imgsName.length; i++) {\r\n    //tagsContainer1.innerHTML += '<div class=\"tags-imports\">' + icon + '<div style=\"width:4px\"></div><input id=\"imgName-' + i + '\" class=\"input-btn-skill\" style=\"border: 0;text-align: left;\" type=\"text\" value=\"' + imgsName[i].name + '\" onchange=\"imgsNameNew[' + i + '].name = this.value; if (!this.value){this.value = imgsName[' + i + '].name;console.log(`恢复原命名`,imgsName[' + i + ']) }\"/></div>';\r\n    tagsContainer1.innerHTML += '<div class=\"tags-imports\"><div style=\"width:4px\">' + (i + 1) + '.' + imgsName[i] + '</div>';\r\n\r\n  }\r\n}\r\n\r\n//生成编辑标签\r\nfunction addEdit(type,copynode) {\r\n  if(copynode){\r\n    copyEdit = copynode.parentNode\r\n  } else {\r\n    editTag.scrollTop = 0;\r\n  }\r\n  if ( editTag.children.length !== 0){\r\n    document.getElementById('chk-editor-' + editorPick).checked = false\r\n  }\r\n  var chk = '<input id=\"chk-editor-' + editorNum + '\" type=\"checkbox\" checked=\" true\" style=\"display:none\" onchange=\"editorChk(this,' + editorNum + ')\"/>'\r\n  var main = type;\r\n  var close = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 17 17\"><g><g><rect x=\"3.5\" y=\"7.5\" width=\"10\" height=\"2\" rx=\"0\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/></g><g><ellipse cx=\"8.5\" cy=\"8.5\" rx=\"8\" ry=\"8\" fill-opacity=\"0\" stroke-opacity=\"1\" stroke=\"var(--mainColor)\" fill=\"none\" stroke-width=\"1\"/></g></g></svg>';\r\n  var set = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 18 18\"><g><path d=\"M3.59452,1.67756L6.80722,3.70617L7.6445,0L10.3555,0L11.1928,3.70617L14.4055,1.67756L16.3224,3.59452L14.2938,6.80722L18,7.64451L18,10.3555L14.2938,11.1928L16.3224,14.4055L14.4055,16.3224L11.1928,14.2938L10.3555,18L7.64451,18L6.80722,14.2938L3.59452,16.3224L1.67756,14.4055L3.70617,11.1928L0,10.3555L0,7.64451L3.70617,6.80722L1.67756,3.59452L3.59452,1.67756ZM13.5,9C13.5,11.4853,11.4853,13.5,9,13.5C6.51472,13.5,4.5,11.4853,4.5,9C4.5,6.51472,6.51472,4.5,9,4.5C11.4853,4.5,13.5,6.51472,13.5,9ZM9.00006,11.9999C10.6569,11.9999,12.0001,10.6568,12.0001,8.99994C12.0001,7.34308,10.6569,5.99994,9.00006,5.99994C7.34321,5.99994,6.00006,7.34308,6.00006,8.99994C6.00006,10.6568,7.34321,11.9999,9.00006,11.9999Z\" fill-rule=\"evenodd\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/></g></svg>';\r\n  var copy = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"none\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 11 11\"><g><g><path d=\"M5,2L4,2L4,4L2,4L2,5L4,5L4,7L5,7L5,5L7,5L7,4L5,4L5,2Z\" fill-rule=\"evenodd\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/></g><g><path d=\"M0,2.5L0,6.5Q0,7.53553,0.732233,8.26777Q1.29574,8.83127,2.03888,8.96112Q2.16872,9.70426,2.73223,10.2678Q3.46447,11,4.5,11L8.5,11Q9.53553,11,10.2678,10.2678Q11,9.53553,11,8.5L11,4.5Q11,3.46447,10.2678,2.73223Q9.70426,2.16872,8.96112,2.03888Q8.83127,1.29574,8.26777,0.732233Q7.53553,0,6.5,0L2.5,0Q1.46447,0,0.732233,0.732233Q0,1.46447,0,2.5ZM9,3.08099L9,6.5Q9,7.53553,8.26777,8.26777Q7.53553,9,6.5,9L3.08099,9Q3.18864,9.30996,3.43934,9.56066Q3.87868,10,4.5,10L8.5,10Q9.12132,10,9.56066,9.56066Q10,9.12132,10,8.5L10,4.5Q10,3.87868,9.56066,3.43934Q9.30996,3.18864,9,3.08099ZM1.43934,7.56066Q1,7.12132,1,6.5L1,2.5Q1,1.87868,1.43934,1.43934Q1.87868,1,2.5,1L6.5,1Q7.12132,1,7.56066,1.43934Q8,1.87868,8,2.5L8,6.5Q8,7.12132,7.56066,7.56066Q7.12132,8,6.5,8L2.5,8Q1.87868,8,1.43934,7.56066Z\" fill-rule=\"evenodd\" fill=\"var(--mainColor)\" fill-opacity=\"1\"/></g></g></svg>';\r\n  if (type == 'HSL') {\r\n\r\n  }\r\n  if (type == '透视') {\r\n\r\n  }\r\n  if (type == '渐变映射') {\r\n\r\n  }\r\n  if (type == '滤镜') {\r\n\r\n  }\r\n  if (type == '变形') {\r\n\r\n  }\r\n  var newEdit = document.createElement('div')\r\n  newEdit.id = 'edits-'+ editorNum;\r\n  newEdit.className = 'edits';\r\n  newEdit.draggable = true;\r\n  newEdit.innerHTML = chk + '<label for=\"chk-editor-' + editorNum + '\" class=\"tags-editor\"><div class=\"btn-text\" style=\"width:10px;height:10px\" onclick=\"if(this.parentNode.parentNode.firstChild.checked !== true) { this.parentNode.parentNode.parentNode.removeChild(this.parentNode.parentNode)};\">' + close + '</div>' + type + '<div class=\"btn-text\" style=\"width:10px;height:10px\"></div></label>' +  '<div class=\"btn-text\" style=\"width:10px;height:10px;position: absolute;top:7px;right:-8px;\" onclick=\"addEdit(this.parentNode.innerText,this);\">' + copy + '</div>'\r\n  if ( editTag.children.length == 0 ){\r\n    editTag.appendChild(newEdit)\r\n  } else {\r\n    if (copynode){\r\n      editTag.insertBefore(newEdit,copyEdit)\r\n    } else {\r\n      editTag.insertBefore(newEdit,editTag.children[0])\r\n    }\r\n  }\r\n  \r\n  editorPick = editorNum;\r\n  editorNum++;\r\n  editsID()\r\n}\r\nfunction editorChk(node,e) {\r\n    if (e !== editorPick) {\r\n      document.getElementById('chk-editor-' + editorPick).checked = false;\r\n      node.checked = true;\r\n      editorPick = e;\r\n      //console.log(\"new\", editorPick, e)\r\n    } else {\r\n        //node.checked = false;\r\n        //console.log(\"copy\", editorPick, e)\r\n        node.checked = true;\r\n        //console.log(\"old\", editorPick, e)\r\n\r\n  }\r\n}\r\n\r\n//拖拽编辑标签\r\nfunction editsID(){  \r\n  for (var i = 0; i < dragSources.length; i++) {\r\n    dragSources[i].addEventListener('dragstart', function(event) {\r\n      event.dataTransfer.setData(\"text/plain\", event.target.id); \r\n      dropStartY = event.clientY;\r\n    });\r\n  \r\n    dragSources[i].addEventListener('dragend', function(event) {\r\n      event.dataTransfer.clearData(\"text/plain\");\r\n      dropEndY = event.clientY;\r\n    });\r\n  }\r\n}\r\n  \r\ndropZones.addEventListener('dragover', function(event) {\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = 'move';\r\n});\r\n\r\ndropZones.addEventListener('drop', function(event) {\r\n  event.preventDefault();\r\n  var id = event.dataTransfer.getData(\"text/plain\");\r\n  var draggedElement = document.getElementById(id);\r\n  var dropZone = event.target;\r\n  if ( dropZone.tagName == 'LABEL' && dropZone.parentNode.id.split('-')[0] == 'edits' ){\r\n    //var index = dropZone.parentNode.id.split('-')[1]\r\n    //console.log(index)\r\n    if ( dropEndY < dropStartY){\r\n      dropZone.parentNode.parentNode.insertBefore(draggedElement,dropZone.parentNode);\r\n    } else {\r\n      dropZone.parentNode.parentNode.insertBefore(draggedElement,dropZone.parentNode.nextElementSibling);\r\n    }\r\n    \r\n  }\r\n  \r\n  //dropZones.appendChild(draggedElement);\r\n});\r\n\r\n//初始化\r\nfunction notag() {\r\n  createrType = \"frame\"\r\n  inputExcel.value = ''\r\n  fileName.innerHTML = '[-- 暂无数据 --]';\r\n  tagsContainer1.innerHTML = '<!--根据列表生成标签-->'\r\n  autoUp.style.display = \"block\";\r\n\r\n  allFrame = [];\r\n  finalFrame = [];\r\n\r\n  dataText.value = '';\r\n  anotherBtns.style.display = \"none\";\r\n  anotherBtns2.style.display = \"none\";\r\n  anotherBtns3.style.display = \"none\";\r\n  anotherBtns4.style.display = \"none\";\r\n  dataTextTips.style.display = \"block\";\r\n}\r\n\r\n//返回编辑\r\nfunction backedit(){\r\n  inputExcel.value = ''\r\n  fileName.innerHTML = '[-- 正在输入 --]';\r\n  tagsContainer1.innerHTML = '<!--根据列表生成标签-->'\r\n  dataTextTips.style.display = \"none\";\r\n  dataText.value = dataToText(allFrame);\r\n  if(allFrame.length > 10){\r\n    dataText.style.height = \"300px\"\r\n  }\r\n  autoUp.style.display = \"block\";\r\n  anotherBtns2.style.display = \"flex\";\r\n  anotherBtns.style.display = \"none\";\r\n  anotherBtns3.style.display = \"none\";\r\n  anotherBtns4.style.display = \"none\";\r\n\r\n}\r\n\r\nfunction dataToText(data){\r\n  let table = '';\r\n\r\n  data.forEach((row, index) => {\r\n    let keys = Object.keys(row).filter(item => item == 'name' || item == 'w' || item == 'h');\r\n    if (index === 0) {\r\n      table += keys.join('\\t') + '\\n';\r\n    }\r\n    table += keys.map(key => row[key]).join('\\t');\r\n    table += '\\n';\r\n  });\r\n\r\n  return table;\r\n}\r\n\r\nfunction noEdit() {\r\n  document.getElementById(\"editor-tags\").innerHTML = \"\";\r\n  editorNum = 1;\r\n  editorPick = 1\r\n}\r\n//保留全部条目\r\nfunction alltag() {\r\n  for (var i = 0; i < allFrame.length; i++) {\r\n    document.getElementById('tag-' + i).style.display = 'flex';\r\n  }\r\n}\r\n\r\n//侧边栏(带动画）\r\nfunction sidePage(e) {\r\n  var btnSide;\r\n  if(e){\r\n    btnSide = e;\r\n    if(e.checked){\r\n      //console.log(111)\r\n      document.getElementById('btn-side-text-0').style.pointerEvents = 'none';\r\n    };\r\n  } else {\r\n    btnSide = document.getElementById(\"btn-side-0\")\r\n  }\r\n  \r\n  if (btnSide.checked) {\r\n    //console.log(222)\r\n    document.getElementById(\"side-main\").style.display = \"block\";\r\n    document.getElementById(\"mask\").style.display = \"block\";\r\n    document.getElementById(\"side-mask\").style.display = \"block\";\r\n    document.getElementById(\"side-mask\").style.animation = \"side-up 0.5s\";\r\n    document.getElementById(\"side-page\").style.zIndex = \"20\";\r\n    document.getElementById(\"side-main\").style.animation = \"side-up 0.5s\";\r\n    \r\n  } else {\r\n    document.getElementById(\"side-main\").style.animation = \"side-close 0.5s\";\r\n    document.getElementById(\"mask\").style.display = \"none\";\r\n    document.getElementById(\"side-mask\").style.animation = \"side-close 0.5s\";\r\n    setTimeout(() => {\r\n      document.getElementById(\"side-mask\").style.display = \"none\";\r\n      document.getElementById(\"side-main\").style.display = \"none\";\r\n      document.getElementById(\"side-page\").style.zIndex = \"\";\r\n    }, 480);\r\n  }\r\n}\r\n\r\n//梯度变化类型\r\nfunction chkMix(type,checked){\r\n  if (checked){\r\n    mixType.push(type)\r\n    //console.log(mixType)\r\n  } else {\r\n\r\n    if(mixType.includes(type)){\r\n      mixType = mixType.filter(item => item !== type)\r\n      //console.log(mixType)\r\n    }\r\n  }\r\n}\r\n\r\n//查找相似类型\r\nfunction chkSame(type,checked){\r\n  if (checked){\r\n    searchSameType.push(type)\r\n  } else {\r\n\r\n    if(searchSameType.includes(type)){\r\n      searchSameType = searchSameType.filter(item => item !== type)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//查找并选中\r\nfunction searchToRe(info) {\r\n  message([{ area: searchArea, type: searchType, info: info }, 'searchToRe'])\r\n}\r\n//查找类型\r\nfunction chkSearchType(e) {\r\n  if (e.id.split(\"-\")[2] !== searchType) {\r\n    message([{ area: searchArea, type: e.id.split(\"-\")[2], info: searchInfo }, 'searchToRe'])\r\n  }\r\n  //var type = [\"Text\", \"Component\", \"ComponentSet\", \"Font\"]\r\n  var type = [\"Text\", \"Name\"]\r\n\r\n  for (var i = 0; i < type.length; i++) {\r\n    document.getElementById(\"chk-for-\" + type[i]).checked = false\r\n  }\r\n\r\n  e.checked = true\r\n  searchType = e.id.split(\"-\")[2]\r\n\r\n}\r\n\r\n//输入倍数\r\nfunction chkNum(e) {\r\n  for (var i = 0; i < 4; i++) {\r\n    document.getElementById('chk-num-list').style.opacity = '1';\r\n    document.getElementById('chk-num-' + i).checked = false;\r\n    document.getElementById('chk-num-' + e).checked = true;\r\n  }\r\n  document.getElementById('input-num-2').value = e + 1;\r\n  document.getElementById('input-num-2').style.color = 'var(--boxBod)';\r\n}\r\n\r\n//选择倍数\r\nfunction numSize() {\r\n  for (var i = 0; i < 4; i++) {\r\n    document.getElementById('chk-num-' + i).checked = false;\r\n\r\n  }\r\n  document.getElementById('input-num-2').style.color = 'var(--mainColor)';\r\n  if (document.getElementById('input-num-2').value != \"\") {\r\n    document.getElementById('chk-num-list').style.opacity = '0.5';\r\n  } else {\r\n    document.getElementById('chk-num-list').style.opacity = '1';\r\n  }\r\n}\r\n\r\n//重置输入色值\r\nfunction reColorText(e) {\r\n\r\n  if (e.value == '') {\r\n    e.value = \"#000000\"\r\n  }\r\n  if (e.value.length < 7) {\r\n    if (e.value[0] == '#') {\r\n      var a = e.value.split(\"#\")[1]\r\n      if (a.length == 3) {\r\n        e.value = \"#\" + a + a\r\n      }\r\n      if (a.length == 2) {\r\n        e.value = \"#\" + a + a + a\r\n      }\r\n      if (a.length == 1) {\r\n        e.value = \"#\" + a + a + a + a + a + a\r\n      }\r\n      if (a.length == 4) {\r\n        e.value = \"#\" + a + \"00\"\r\n      }\r\n      if (a.length == 5) {\r\n        e.value = \"#\" + a + \"0\"\r\n      }\r\n    } else {\r\n      var c = e.value\r\n      if (e.value.length == 3) {\r\n        e.value = \"#\" + c + c\r\n      }\r\n      if (e.value.length == 2) {\r\n        e.value = \"#\" + c + c + c\r\n      }\r\n      if (e.value.length == 1) {\r\n        e.value = \"#\" + c + c + c + c + c + c\r\n      }\r\n      if (e.value.length == 4) {\r\n        e.value = \"#\" + c + \"00\"\r\n      }\r\n      if (e.value.length == 5) {\r\n        e.value = \"#\" + c + \"0\"\r\n      }\r\n      if (e.value.length == 6) {\r\n        e.value = \"#\" + c\r\n      }\r\n    }\r\n  } else if (e.value.length > 7) {\r\n    if (e.value[0] == '#' && e.value[1] == '#') {\r\n      //e.value = \"#000000\"\r\n      //console.log(e.value.split(\"#\")[1])\r\n      e.value = e.value.substring(1, 8)\r\n    } else {\r\n      e.value = \"#000000\"\r\n    }\r\n  } else if (e.value.length = 7) {\r\n    e.value = e.value\r\n  } else {\r\n    e.value = \"#000000\"\r\n  }\r\n\r\n}\r\n\r\n//缩放中心\r\nfunction chkScaleCenter(e) {\r\n  var center = [\"TL\", \"TC\", \"TR\", \"CL\", \"CC\", \"CR\", \"BL\", \"BC\", \"BR\"]\r\n  for (var i = 0; i < center.length; i++) {\r\n    document.getElementById(\"chk-scale-\" + center[i]).checked = false\r\n  }\r\n  e.checked = true\r\n  scaleCenter = e.id.split(\"-\")[2]\r\n}\r\n//缩放类型\r\nfunction chkScaleType(e) {\r\n  var type = [\"W\", \"H\", \"WH\"]\r\n  if (scaleType != e.id.split(\"-\")[2]) {\r\n    if (e.id.split(\"-\")[2] == \"WH\") {\r\n      document.getElementById(\"input-num-scale\").value = 100;\r\n    } else {\r\n      document.getElementById(\"input-num-scale\").value = 0;\r\n    }\r\n  }\r\n  for (var i = 0; i < type.length; i++) {\r\n    document.getElementById(\"chk-scale-\" + type[i]).checked = false\r\n  }\r\n\r\n  e.checked = true\r\n  scaleType = e.id.split(\"-\")[2]\r\n\r\n}\r\n//等比缩放\r\nfunction chkScale(s) {\r\n  //message([{center:scaleCenter,type:scaleType,value:s},'scaleSelf'])\r\n}\r\n\r\n//遍历剩余标签，读取对应数组的宽高，并发往主线程，以创建画板\r\nfunction createrObj() {\r\n  if (createrType == \"frame\") {\r\n    console.log('已上传数量：' + allFrame.length);\r\n\r\n    for (var i = 0; i < allFrame.length; i++) {\r\n      if (document.getElementById('tag-' + i).style.display !== 'none') {\r\n        finalFrame.push(allFrame[i])\r\n      }\r\n    }\r\n    console.log('已选择：' + finalFrame.length);\r\n    message([finalFrame, \"createrframe\"])\r\n    finalFrame = [];\r\n  }\r\n\r\n}\r\n\r\n//选择转矢量类型\r\nfunction chkVector(e) {\r\n  for (var i = 0; i < 4; i++) {\r\n    document.getElementById('chk-vector-' + i).checked = false;\r\n    document.getElementById('chk-vector-' + e).checked = true;\r\n  }\r\n}\r\n\r\n//返回图片宽高信息和分段，恢复图片原尺寸\r\nfunction imgURLtoWH(e) {\r\n  var img = new Image();\r\n  img.src = e.imgURL;\r\n  img.onload = function () {\r\n    message([{ w:img.width, h:img.height,index:e.index}, 'imgWH'])\r\n  }\r\n}\r\n\r\n//添加噪点\r\nfunction noise() {\r\n  var noiseV = document.getElementById('input-num-tjzs').value\r\n  var dom = document.createElement('canvas');\r\n  dom.width = 512;\r\n  dom.height = 512;\r\n  var ctx = dom.getContext('2d');\r\n  /*\r\n  for (let y = 0; y < e[0]; y++) {\r\n    for (let x = 0; x < e[1]; x++) {\r\n      var color = Math.floor(Math.random() * 12 + (255 - 16)).toString(16);\r\n      ctx.fillStyle = `#${color}${color}${color}`;\r\n      ctx.fillRect(x, y, 1, 1);\r\n    };\r\n  };\r\n  */\r\n  for (var i = 0; i < noiseV * 65536; i++) {\r\n    var x = Math.random() * dom.width;\r\n    var y = Math.random() * dom.height;\r\n    var color = Math.floor(Math.random() * 6 + (255 - 16)).toString(16);\r\n    //ctx.fillStyle = `#${color}${color}${color}`;\r\n    ctx.fillStyle = 'rgba(' + Math.random() * 255 + ',' + Math.random() * 255 + ',' + Math.random() * 255 + ',' + (Math.random() * 0.5 + 0.5) + ')';\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, Math.random() * 0.5, 0, 6);\r\n    ctx.fill();\r\n  }\r\n  var url = dom.toDataURL(`image/png`, 0.6);\r\n  return B64ToU8A(url.split(',')[1]);\r\n\r\n}\r\n\r\n//生成小地图\r\nasync function createrMap(info, size) {\r\n  var mapCanvas = document.getElementById(\"map-canvas\");\r\n  var mapCanvasKey = document.getElementById(\"map-canvas-key\");\r\n  var viewW = document.getElementById(\"map-view\").getBoundingClientRect().width;\r\n  var viewH = document.getElementById(\"map-view\").getBoundingClientRect().height;\r\n  var viewBox = document.getElementById(\"map-viewbox\");\r\n  var viewBg = document.getElementById(\"map-bg\");\r\n  var viewBig = document.getElementById(\"map-view-big\")\r\n  //console.log(viewW,viewH)\r\n  //console.log(info.w,info.h)\r\n  if (info.w <= 4096 && info.h <= 4096) {\r\n    mapCanvas.width = info.w;\r\n    mapCanvas.height = info.h;\r\n    //console.log(mapCanvas.width,mapCanvas.height)\r\n  } else {\r\n    if (info.w / info.h > 1) {//横版\r\n      mapCanvas.width = 4096;\r\n      mapCanvas.height = (4096 / info.w * info.h);\r\n      //console.log(mapCanvas.width,mapCanvas.height)\r\n    } else if (info.w / info.h < 1) {//竖版\r\n      mapCanvas.height = 4096;\r\n      mapCanvas.width = (4096 / info.h * info.w);\r\n    } else {//方形\r\n      mapCanvas.width = 4096;\r\n      mapCanvas.height = 4096;\r\n    }\r\n  };\r\n  var scaleW = viewW / mapCanvas.width;\r\n  var scaleH = viewH / mapCanvas.height;\r\n  var scale = Math.min(scaleW, scaleH);\r\n\r\n  //console.log(scale)\r\n  mapCanvas.style.transform = 'scale(' + scale + ')';\r\n  mapCanvas.style.transformOrigin = '0 0';\r\n  mapCanvas.style.top = (viewH - mapCanvas.height * scale) / 2 - 1 + \"px\";\r\n  mapCanvas.style.left = (viewW - mapCanvas.width * scale) / 2 - 1 + \"px\";\r\n  mapCanvasKey.width = mapCanvas.width * scale * size;\r\n  mapCanvasKey.height = mapCanvas.height * scale * size;\r\n  viewBox.style.width = mapCanvas.width * scale + 4 + \"px\";\r\n  viewBox.style.height = mapCanvas.height * scale + 4 + \"px\";\r\n  viewBox.style.top = (viewH - mapCanvas.height * scale) / 2 - 4 + \"px\";\r\n  viewBox.style.left = (viewW - mapCanvas.width * scale) / 2 - 4 + \"px\";\r\n  viewBg.style.width = mapCanvas.width * scale + 4 + \"px\";\r\n  viewBg.style.height = mapCanvas.height * scale + 4 + \"px\";\r\n  viewBg.style.top = (viewH - mapCanvas.height * scale) / 2 - 4 + \"px\";\r\n  viewBg.style.left = (viewW - mapCanvas.width * scale) / 2 - 4 + \"px\";\r\n  viewBg.style.backgroundColor = info.bg;\r\n  viewBig.style.backgroundColor = info.bg;\r\n  inView.s = info.w / (mapCanvas.width * scale + 4)\r\n\r\n\r\n  var ctx = mapCanvas.getContext(\"2d\")\r\n  var ctx2 = mapCanvasKey.getContext(\"2d\")\r\n  var url = URL.createObjectURL(new Blob([info.view]));\r\n  var image = new Image();\r\n  image.src = url;\r\n  image.onload = await function () {\r\n    ctx.drawImage(image, 0, 0, mapCanvas.width, mapCanvas.height);\r\n    ctx2.drawImage(image, 0, 0, mapCanvas.width * scale * size, mapCanvas.height * scale * size);\r\n    URL.revokeObjectURL(url)\r\n  }\r\n}\r\n//生成十字线\r\nfunction mapLine(event, node) {\r\n  var XY = [event.pageX - node.x, event.pageY - node.y];\r\n  root.style.setProperty('--map-line-x', XY[0]);\r\n  root.style.setProperty('--map-line-y', XY[1]);\r\n  var mapCanvasKey = document.getElementById(\"map-canvas-key\");\r\n  var viewBig = document.getElementById(\"map-view-big\");\r\n  if (XY[0] > node.width - 60 && XY[1] < 60) {\r\n    var trans = node.height - 60;\r\n    viewBig.style.transform = \"translateY(\" + trans + \"px)\";\r\n    viewBig.style.transition = \"transform ease-out 0.2s\";\r\n  } else {\r\n    viewBig.style.transform = \"translateY(0)\";\r\n    viewBig.style.transition = \"transform ease-out 0.2s\";\r\n  }\r\n  mapCanvasKey.style.top = XY[1] * -1 * mapCanvasKey.width / node.width + 30;\r\n  mapCanvasKey.style.left = XY[0] * -1 * mapCanvasKey.width / node.width + 30;\r\n}\r\n\r\n//移动画布中心\r\nvar singleClick = false\r\nfunction reCenterAuto(event, node) {\r\n  var XY = [event.pageX - node.x, event.pageY - node.y]\r\n  var x = Math.round(inView.x + XY[0] * inView.s)\r\n  var y = Math.round(inView.y + XY[1] * inView.s)\r\n  singleClick = true\r\n  setTimeout(() => {\r\n    if (singleClick) {\r\n      //console.log(node)\r\n      //console.log(x,y,node.width,node.height,XY,inView.s)\r\n      message([{ x: x, y: y }, \"reCenterAuto\"])\r\n    }\r\n  }, 250);\r\n\r\n}\r\n\r\nfunction reCenter(event, node) {\r\n  var XY = [event.pageX - node.x, event.pageY - node.y]\r\n  var x = Math.round(inView.x + XY[0] * inView.s)\r\n  var y = Math.round(inView.y + XY[1] * inView.s)\r\n  singleClick = false;\r\n  //console.log(node)\r\n  //console.log(x,y,node.width,node.height,XY,inView.s)\r\n  message([{ x: x, y: y }, \"reCenter\"])\r\n\r\n\r\n}\r\n\r\n//斜切\r\nfunction skew(e) {\r\n  if (e) {\r\n    var skewInfo = {\r\n      x: parseInt(document.getElementById('input-num-skewW').value),\r\n      y: parseInt(document.getElementById('input-num-skewH').value),\r\n      w: parseInt(document.getElementById('input-num-scaleW').value),\r\n      h: parseInt(document.getElementById('input-num-scaleH').value),\r\n    }\r\n    //console.log(skewInfo)\r\n    message([skewInfo, 'skewSet'])\r\n  } else {\r\n    document.getElementById('slider-skewW').value = 0;\r\n    document.getElementById('slider-skewH').value = 0;\r\n    document.getElementById('input-num-skewW').value = 0;\r\n    document.getElementById('input-num-skewH').value = 0;\r\n    document.getElementById('slider-scaleW').value = 100;\r\n    document.getElementById('slider-scaleH').value = 100;\r\n    document.getElementById('input-num-scaleW').value = 100;\r\n    document.getElementById('input-num-scaleH').value = 100;\r\n    message([{ x: 0, y: 0, w: 100, h: 100 }, 'skewSet'])\r\n  }\r\n\r\n}\r\n\r\n//切换tab\r\nfunction viewPage(e) {\r\n  \r\n  for (var i = 0; i < tab.length; i++) {\r\n    if (i + 1 == e) {\r\n      for (var ii = 0; ii < main.length; ii++) {\r\n        //console.log('tab-'+ i + '开启')\r\n        document.getElementById(main[ii] + \"-main-\" + (i + 1)).style.display = 'flex';\r\n        document.getElementById(tab[i]).style.opacity = 1;\r\n      }\r\n    } else {\r\n      for (var ii = 0; ii < main.length; ii++) {\r\n        //console.log(i + '关闭')\r\n        document.getElementById(main[ii] + \"-main-\" + (i + 1)).style.display = 'none';\r\n        document.getElementById(tab[i]).style.opacity = 0.5;\r\n      }\r\n    }\r\n  }\r\n  message([e, \"tabSet\"])\r\n  tabPage = e;\r\n  if( e == 5 ){\r\n    console.log('getStyle')\r\n    message([\"getStyle\", \"getStyle\"])\r\n  }\r\n}\r\n\r\n//////使用八叉树提取色表//////\r\n//定义八叉树\r\nclass OctreeNode {\r\n  constructor(level, parent) {\r\n      this.level = level; // 当前节点所在的层次\r\n      this.pixelCount = 0; // 当前节点包含的像素数量\r\n      this.redSum = 0;     // 红色分量的总和\r\n      this.greenSum = 0;   // 绿色分量的总和\r\n      this.blueSum = 0;    // 蓝色分量的总和\r\n      this.paletteIndex = -1; // 如果该节点是一个叶子节点，记录其在调色板中的索引\r\n      this.children = new Array(8); // 子节点数组\r\n      this.parent = parent; // 父节点引用\r\n  }\r\n\r\n  // 判断当前节点是否为叶子节点\r\n  isLeaf() {\r\n      return this.children.every(child => child === undefined);\r\n  }\r\n\r\n  // 获取当前节点的平均颜色\r\n  getAverageColor() {\r\n      if (this.pixelCount === 0) return [0, 0, 0];\r\n      return [\r\n          Math.round(this.redSum / this.pixelCount),\r\n          Math.round(this.greenSum / this.pixelCount),\r\n          Math.round(this.blueSum / this.pixelCount)\r\n      ];\r\n  }\r\n}\r\n//构建八叉树\r\nclass OctreeQuantizer {\r\n  constructor(maxDepth) {\r\n      this.maxDepth = maxDepth;\r\n      this.root = new OctreeNode(0, null);\r\n      this.palette = [];\r\n      this.leafNodes = [];\r\n  }\r\n\r\n  // 插入一个像素到八叉树中\r\n  insertPixel(pixel) {\r\n      let node = this.root;\r\n      for (let level = 0; level < this.maxDepth; level++) {\r\n          const index = this.getOctantIndex(pixel, level);\r\n          if (!node.children[index]) {\r\n              node.children[index] = new OctreeNode(level + 1, node);\r\n          }\r\n          node = node.children[index];\r\n      }\r\n      node.pixelCount++;\r\n      node.redSum += pixel[0];\r\n      node.greenSum += pixel[1];\r\n      node.blueSum += pixel[2];\r\n  }\r\n\r\n  // 根据当前层级获取八叉树索引\r\n  getOctantIndex(pixel, level) {\r\n      const bitShift = 8 - level - 1;\r\n      const redBit = (pixel[0] >> bitShift) & 0x1;\r\n      const greenBit = (pixel[1] >> bitShift) & 0x1;\r\n      const blueBit = (pixel[2] >> bitShift) & 0x1;\r\n      return (redBit << 2) | (greenBit << 1) | blueBit;\r\n  }\r\n\r\n  // 合并叶子节点以减少颜色数量\r\n  reduceColors(targetColors) {\r\n      while (this.leafNodes.length > targetColors) {\r\n          let deepestNode = null;\r\n          for (const leaf of this.leafNodes) {\r\n              if (!deepestNode || leaf.level > deepestNode.level) {\r\n                  deepestNode = leaf;\r\n              }\r\n          }\r\n          this.mergeNode(deepestNode);\r\n      }\r\n  }\r\n\r\n  // 合并一个节点\r\n  mergeNode(node) {\r\n      if (!node.isLeaf()) return;\r\n\r\n      node.parent.pixelCount += node.pixelCount;\r\n      node.parent.redSum += node.redSum;\r\n      node.parent.greenSum += node.greenSum;\r\n      node.parent.blueSum += node.blueSum;\r\n      node.parent.children[node.getIndex()] = undefined;\r\n\r\n      const index = this.leafNodes.indexOf(node);\r\n      if (index !== -1) {\r\n          this.leafNodes.splice(index, 1);\r\n      }\r\n      if (node.parent.isLeaf()) {\r\n          this.leafNodes.push(node.parent);\r\n      }\r\n  }\r\n\r\n  // 生成调色板\r\n  generatePalette() {\r\n      this.leafNodes = [];\r\n      this.collectLeaves(this.root);\r\n\r\n      this.palette = this.leafNodes.map((leaf, index) => {\r\n          leaf.paletteIndex = index;\r\n          return leaf.getAverageColor();\r\n      });\r\n  }\r\n\r\n  // 收集所有叶子节点\r\n  collectLeaves(node) {\r\n      if (node.isLeaf()) {\r\n          this.leafNodes.push(node);\r\n      } else {\r\n          for (const child of node.children) {\r\n              if (child) {\r\n                  this.collectLeaves(child);\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  // 获取调色板\r\n  getPalette() {\r\n      return this.palette;\r\n  }\r\n}\r\n\r\n//载入图片数据\r\nasync function imgDataSet(imgDataOld,imgDataNew,isNew) {\r\n  //console.log(imgExportInfo)\r\n    if(isNew == \"new\"){\r\n      imgExportData = [];\r\n      var imgData = imgDataNew;\r\n      for (var i = 0; i < imgData.length; i++) {\r\n        var fileName = document.getElementById('fileName-' + i).value;\r\n        var s = document.getElementById('exportSize-' + i).value;\r\n        var colorBox = await getColorBox2(imgData[i]);//八叉树法\r\n        imgExportData.push({u8a:imgData[i],src:U8AToB64(imgData[i]),fileName: fileName,s:s,col:colorBox})\r\n        //console.log(imgExportData)\r\n        if ( imgData[i].length/1000 <= s || s == ''){\r\n          document.getElementById('imgsize-' + i).innerHTML =  Math.floor(imgData[i].length/1000)  + 'k /无需压缩' \r\n        } else {\r\n          document.getElementById('imgsize-' + i).innerHTML =  Math.floor(imgData[i].length/1000) + 'k /<span style=\"color:var(--liColor1)\">待压缩</span>' \r\n        }\r\n    }\r\n    }else{\r\n      var imgData = imgDataNew;\r\n\r\n      var index = exportNum - imgDataNew.length\r\n      //console.log(exportNum,index)\r\n      for (var i = 0; i < imgData.length; i++) {\r\n        \r\n        if ( document.getElementById('fileName-' + (i + index)) ){\r\n          var fileName = document.getElementById('fileName-' + (i + index)).value\r\n          var s = document.getElementById('exportSize-' + (i + index)).value\r\n        } else {\r\n          var fileName = ''\r\n          var s = ''\r\n        }\r\n        var colorBox = await getColorBox2(imgData[i]);//八叉树法 \r\n        imgExportData.push({u8a:imgData[i],src:U8AToB64(imgData[i]),fileName: fileName,s:s,col:colorBox})\r\n      }\r\n\r\n      //console.log(imgExportData)\r\n      for (var i = 0; i < imgData.length; i++) {\r\n        //console.log((i + index - 1))\r\n        if ( imgExportData[(i + index)].u8a.length/1000 <= imgExportData[(i + index)].s || imgExportData[(i + index)].s == ''){\r\n          document.getElementById('imgsize-' + (i + index)).innerHTML =  Math.floor(imgExportData[(i + index)].u8a.length/1000)  + 'k /无需压缩' \r\n        } else {\r\n          document.getElementById('imgsize-' + (i + index)).innerHTML =  Math.floor(imgExportData[(i + index)].u8a.length/1000) + 'k /<span style=\"color:var(--liColor1)\">待压缩</span>' \r\n        }\r\n      }\r\n\r\n    }\r\n\r\n}\r\nfunction getColorBox2(imgDatas){\r\n  return new Promise((resolve, reject) => {\r\n    var blob = new Blob([imgDatas], { type: 'image/png' }); \r\n    var url = URL.createObjectURL(blob);\r\n    var img = new Image()\r\n    img.src = url;\r\n\r\n    img.onload = function(){\r\n      var canvas = document.createElement('canvas');\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      var ctx = canvas.getContext('2d')\r\n      ctx.drawImage(img,0,0)\r\n      var imageData = ctx.getImageData(0,0,img.width,img.height)\r\n      var data = imageData.data;\r\n\r\n      function quantizeImage(datas) {\r\n        const octree = new OctreeQuantizer(3); // 设置最大深度\r\n\r\n        // 插入每个像素到八叉树中\r\n        for (let i = 0; i <  datas.length; i += 4) {\r\n            const r =  datas[i];\r\n            const g =  datas[i + 1];\r\n            const b =  datas[i + 2];\r\n            octree.insertPixel([r, g, b]);\r\n        }\r\n\r\n        // 减少颜色数量\r\n        octree.reduceColors(128);\r\n\r\n        // 生成调色板\r\n        octree.generatePalette();\r\n\r\n        return octree.getPalette();\r\n      }\r\n\r\n      resolve(quantizeImage(imageData.data))\r\n\r\n    }\r\n  })\r\n}\r\n\r\n//导出图片为zip\r\nasync function exportImg(){\r\n  //console.log(666)\r\n  if(imgExportData.length > 0){\r\n    //console.log(777)\r\n    try {\r\n      //console.log(888)\r\n      const compressedImages = await compressImages(imgExportData);\r\n      createZipAndDownload(compressedImages);\r\n    } catch (error) {\r\n      console.error('处理过程中发生错误:', error);\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n//单个图片的压缩\r\nfunction compressImage(blob,quality,type,colorBox) {\r\n   //console.log(u8a,quality,type)\r\n    if (type == 'jpg' || type == 'jpeg'){\r\n      //console.log(type)\r\n      return new Promise((resolve, reject) => {\r\n        //var blob = new Blob([u8a], { type: 'image/jpeg' });\r\n        var file = new File([blob],'image.jpg',{type:'image/jpeg'})\r\n        //console.log(file)\r\n        new Compressor(file, {\r\n          quality:quality/10,\r\n          success(result) {\r\n            resolve(result);\r\n          },\r\n          error(err) {\r\n            reject(err);\r\n          },\r\n        });\r\n      });\r\n    } else if ( type == 'png') {\r\n      var colorThief = new ColorThief();\r\n      return new Promise((resolve, reject) => {\r\n        //var blob = new Blob([u8a], { type: 'image/png' });    \r\n        if(quality == 10){\r\n          resolve(blob)\r\n        } else {\r\n          var url = URL.createObjectURL(blob);\r\n          var img = new Image()\r\n          img.src = url;\r\n\r\n          img.onload = function(){\r\n            var palette = colorThief.getPalette(img,20,1)//提取关键颜色\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d')\r\n            ctx.drawImage(img,0,0)\r\n            var imageData = ctx.getImageData(0,0,img.width,img.height)\r\n            var data = imageData.data;\r\n            var colorcut = new Promise((resolve, reject) => {\r\n              var deep = [0,2,6,8,12,14,16,18,20,22]\r\n              var newStep = deep[Math.floor(10 - quality)];  \r\n\r\n              function toStep(value,step){//通过步长限定色值（失真）\r\n                return Math.round(value/step)*step\r\n              }\r\n\r\n              function findColor(r,g,b){//通过色板简化颜色（保真）\r\n                var palette2 = [...palette,...colorBox];\r\n                //console.log(palette2)\r\n                var minDist = Infinity;\r\n                var keyColor = null;\r\n                \r\n                if ( !palette2.includes([r,g,b])){\r\n                  for ( var i = 0; i < palette2.length; i++){\r\n                    //var dist = Math.abs(palette2[i][0] - r) + Math.abs(palette2[i][1] - g) + Math.abs(palette2[i][2] - b);\r\n                    var dist = Math.sqrt(\r\n                      Math.pow(palette2[i][0] - r,2) + Math.pow(palette2[i][1] - g,2) + Math.pow(palette2[i][2] - b,2)\r\n                    )\r\n                    if ( dist < minDist){\r\n                      minDist = dist;\r\n                      keyColor = [palette2[i][0],palette2[i][1],palette2[i][2]]\r\n                    }\r\n                  }\r\n                } else {\r\n                  keyColor = [r,g,b]\r\n                }\r\n                \r\n                return keyColor\r\n              }\r\n\r\n              //*\r\n              for (var i = 0; i < data.length; i += 4){\r\n                var [r,g,b,a] = [data[i],data[i + 1],data[i + 2],data[i + 3]];\r\n                var x = (i / 4) % img.width,y = Math.floor((i / 4) / img.width);//获取像素坐标\r\n                if(r !== g && r !== b && g !== b ){\r\n                  data[i] = toStep(r,newStep);\r\n                  data[i + 1] = toStep(g,newStep);\r\n                  data[i + 2] = toStep(b,newStep);\r\n                }\r\n                if ( quality < 5){\r\n                  if ( a < 10 || a > 245){\r\n                    data[i + 3] = a;\r\n                  } else {\r\n                    var stepA = Math.ceil(2.5 * ((10 - quality)/10 + 1));\r\n                    newA = Math.floor((a - 1) / stepA) * stepA + 1;\r\n                    ea = newA - data[i + 3];\r\n                    data[i + 3] = newA;\r\n\r\n                    function floyd(dx,dy,factor){//误差扩散\r\n                      if (x + dx >= 0 && x + dx < img.width && y + dy < img.height){\r\n                        var newIndex = ((y + dy) * img.width + (x + dx)) * 4;//当前像素的周围像素\r\n                        data[newIndex + 3] += ea * factor;//抖动\r\n                      }\r\n                    }\r\n                    //*\r\n                    floyd(1,0,7/32)\r\n                    floyd(-1,1,3/32)\r\n                    floyd(0,1,4/32)\r\n                    floyd(1,1,2/32)\r\n                    floyd(2,0,6/32)\r\n                    floyd(-2,2,2/32)\r\n                    floyd(0,2,5/32)\r\n                    floyd(2,2,3/32)//矩阵\r\n                    //*/\r\n                  }\r\n                } else {\r\n                  data[i + 3] = a;\r\n                }\r\n              }\r\n              //*/\r\n\r\n              if ( quality == 9){\r\n                for (var i = 0; i < data.length; i += 4){\r\n                  var [r,g,b,a] = [data[i],data[i + 1],data[i + 2],data[i + 3]];\r\n                  var x = (i / 4) % img.width,y = Math.floor((i / 4) / img.width);//获取像素坐标\r\n                  if(r !== g && r !== b && g !== b ){\r\n                    var cl = findColor(r,g,b);\r\n                    var er = r - cl[0], eg = g - cl[1], eb = b - cl[2];\r\n                    data[i] = cl[0];\r\n                    data[i + 1] = cl[1];\r\n                    data[i + 2] = cl[2];\r\n                    function floyd(dx,dy,factor){//误差扩散\r\n                      if (x + dx >= 0 && x + dx < img.width && y + dy < img.height){\r\n                        var newIndex = ((y + dy) * img.width + (x + dx)) * 4;//当前像素的周围像素\r\n                        data[newIndex] += er * factor;\r\n                        data[newIndex + 1] += eg * factor;\r\n                        data[newIndex + 2] += eb * factor;//抖动\r\n                      }\r\n                    }\r\n                    //*\r\n                    floyd(1,0,7/32)\r\n                    floyd(-1,1,3/32)\r\n                    floyd(0,1,4/32)\r\n                    floyd(1,1,2/32)\r\n                    floyd(2,0,6/32)\r\n                    floyd(-2,2,2/32)\r\n                    floyd(0,2,5/32)\r\n                    floyd(2,2,3/32)//矩阵\r\n                    //*/\r\n                    \r\n                  }\r\n                }\r\n\r\n              }\r\n              ctx.putImageData(imageData,0,0);\r\n              canvas.toBlob(function(blob){\r\n                resolve(blob)\r\n              },'image/png')\r\n            })\r\n\r\n            resolve(colorcut)\r\n          }\r\n        }\r\n        \r\n      })\r\n      //return new Blob([u8a], { type: 'image/png' });\r\n    } else if ( type == 'webp') {\r\n      return new Promise((resolve, reject) => {\r\n        //var blob = new Blob([u8a], { type: 'image/png' });\r\n        var url = URL.createObjectURL(blob);\r\n        var img = new Image()\r\n        img.src = url;\r\n\r\n        img.onload = function(){\r\n          var palette = colorThief.getPalette(img,20,1)\r\n          //console.log(Math.pow(2,quality*10))\r\n          var canvas = document.createElement('canvas');\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          var ctx = canvas.getContext('2d')\r\n          ctx.drawImage(img,0,0)\r\n          canvas.toBlob(function(blob){\r\n            resolve(blob)\r\n          },'image/webp',(quality/10))\r\n        }\r\n      })\r\n    }\r\n  \r\n}\r\n\r\n// 批量压缩\r\nasync function compressImages(imgExportData) {\r\n  //console.log(999)\r\n  var imageDataArray = imgExportData.map(item => item.u8a)\r\n  var targetSize = imgExportData.map(item => item.s*1000)\r\n  var type = imgExportData.map(item => item.fileName.split('.').pop())\r\n  var colorBox = imgExportData.map(item => item.col)\r\n  const compressedImages = [];\r\n  for (let i = 0; i < imageDataArray.length; i++) {\r\n    var quality = 10; // 初始压缩质量\r\n    //console.log(111)\r\n    var result = new Blob([imageDataArray[i]], { type: 'image/png' });//初始化\r\n    //console.log(222,result.size,[i],imageDataArray[i].length,targetSize[i])\r\n    //if (targetSize[i] && imageDataArray[i].length > targetSize[i] ){//已删除该判断，会导致非png格式编码错误\r\n    var newBlob = new Blob([imageDataArray[i]], { type: 'image/jpeg' });\r\n      do {\r\n        try {\r\n          result = await compressImage(newBlob, quality,type[i],colorBox[i]);\r\n          if (quality == 9){//先上256色+扩散算法，后面靠减色压缩\r\n            newBlob = result;\r\n          }\r\n          if (targetSize[i] && result.size > targetSize[i] && quality > 1) {\r\n            if ( quality - 1 >= 0){\r\n              console.log(\"压缩质量:\" + quality )\r\n              quality -= 1; // 如果超过目标大小，减少质量再次尝试\r\n            } else {\r\n              quality = 0;\r\n            }\r\n            \r\n            //console.log(result.size/1000 + 'k')\r\n          } else {\r\n            if ( !targetSize[i] || result.size <= targetSize[i] ){\r\n              //console.log(targetSize[i])\r\n              document.getElementById('imgsize-' + i ).innerHTML =  Math.floor(result.size/1000) + \"k /质量:\" + Math.ceil(quality) \r\n            } else {\r\n              if (result.size){\r\n                document.getElementById('imgsize-' + i ).innerHTML = '<span style=\"color:var(--liColor1)\">' +  Math.floor(result.size/1000) + \"k /压缩失败</span>\"\r\n              } else {\r\n                document.getElementById('imgsize-' + i ).innerHTML = '<span style=\"color:var(--liColor1)\">' +  Math.floor(result.length/1000) + \"k /压缩失败</span>\"\r\n              }\r\n              \r\n            }\r\n            //console.log(result)\r\n            break;\r\n          }\r\n        } catch (error) {\r\n          console.error('压缩过程中发生错误:', error);\r\n          break;\r\n        }\r\n      } while (result.size > targetSize[i]);\r\n    //}//已删除该判断，会导致非png格式编码错误\r\n    \r\n\r\n    compressedImages.push(result);\r\n  }\r\n  return compressedImages;\r\n}\r\n\r\n// 创建ZIP文件并提供下载\r\nfunction createZipAndDownload(compressedImages) {\r\n  var MN = new Date()\r\n  var M = String(MN.getMonth() + 1).padStart(2, '0');\r\n  var N = String(MN.getDate()).padStart(2, '0');\r\n  var HHMMSS = String(MN.getHours()).padStart(2, '0') + String(MN.getMinutes()).padStart(2, '0') + String(MN.getSeconds()).padStart(2, '0');\r\n  var zip = new JSZip();\r\n\r\n  var imgs = imgExportData;\r\n  compressedImages.forEach((blob, index) => {\r\n    var path = imgs[index].fileName.split('/');\r\n    var name = path.pop();\r\n    if (imgs[index].fileName.split('/').length == 2) {\r\n      var folder = zip.folder(path[0]);\r\n      folder.file(name,blob);\r\n    } else if (imgs[index].fileName.split('/').length == 3) {\r\n      var folder1 = zip.folder(path[0]);\r\n      var folder2 = folder1.folder(path[1]);\r\n      folder2.file(name,blob);\r\n    } else {\r\n      zip.file(name,blob);\r\n    }\r\n  });\r\n\r\n\r\n  zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n    saveAs(content, docInfo + '-' + M + N + '_' + HHMMSS + '.zip');\r\n  });\r\n}\r\n\r\n\r\n//b64转u8\r\nfunction B64ToU8A(b64) {\r\n  const padding = '='.repeat((4 - b64.length % 4) % 4);\r\n  const base64 = (b64 + padding)\r\n    .replace(/\\-/g, '+')\r\n    .replace(/_/g, '/');\r\n\r\n  const rawData = atob(base64);\r\n  const rawDataLength = rawData.length;\r\n  const array = new Uint8Array(new ArrayBuffer(rawDataLength));\r\n\r\n  for (let i = 0; i < rawDataLength; i += 1) {\r\n    array[i] = rawData.charCodeAt(i);\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n//u8转b64\r\nfunction U8AToB64(u8) {\r\n  let binaryString = '';\r\n  for (let i = 0; i < u8.length; i++) {\r\n    binaryString += String.fromCharCode(u8[i]);\r\n  }\r\n  // 对二进制字符串进行base64编码\r\n  const base64 = btoa(binaryString);\r\n  return base64; //\"data:image/png;base64,\" + \r\n}\r\n// RGB转HSL\r\nfunction rgbToHsl(r,g,b) {\r\n  var r = r / 255;\r\n  var g = g / 255;\r\n  var b = b / 255;\r\n  \r\n  var max = Math.max(r, g, b);\r\n  var min = Math.min(r, g, b);\r\n  \r\n  let h, s, l = (max + min) / 2;\r\n  \r\n  if (max === min) {\r\n    h = s = 0; // achromatic\r\n  } else {\r\n    var d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n    \r\n    switch (max) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    \r\n    h /= 6;\r\n  }\r\n  \r\n  return { h: Math.round(h * 360), s: Math.round(s * 100), l: Math.round(l * 100) };\r\n}\r\n\r\n//HSL转RGB\r\nfunction hslToRgb(H,S,L) {\r\n  var h = parseInt(H) / 360; // 转换为0到1的数值\r\n  var s = parseInt(S) / 100; // 保持在0到1之间\r\n  var l = parseInt(L) / 100; // 保持在0到1之间\r\n  var r, g, b;\r\n\r\n  if (s === 0) {\r\n    r = g = b = l; // 灰度色\r\n  } else {\r\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    var p = 2 * l - q;\r\n    r = hueToRgb(p, q, h + 1/3);\r\n    g = hueToRgb(p, q, h);\r\n    b = hueToRgb(p, q, h - 1/3);\r\n  }\r\n\r\n  return [\r\n    Math.round(r * 255),\r\n    Math.round(g * 255),\r\n    Math.round(b * 255)\r\n  ];\r\n\r\n  function hueToRgb(p, q, t) {\r\n    if (t < 0) t += 1;\r\n    if (t > 1) t -= 1;\r\n    if (t < 1/6) return p + (q - p) * 6 * t;\r\n    if (t < 1/2) return q;\r\n    if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n    return p;\r\n  }\r\n}\r\n\r\n//大图导入裁剪\r\nfunction cutImg(file, name) {\r\n  if (file instanceof File) {\r\n    // 处理文件\r\n    //console.log('这是一个文件');\r\n    var reader = new FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onload = function (e) {\r\n      var data = new Uint8Array(e.target.result);\r\n      var url = URL.createObjectURL(new Blob([data]));\r\n      cutImgToCanvas(url)\r\n    };\r\n  } else if (typeof file === 'string') {\r\n    // 处理字符串\r\n    //console.log(file)\r\n    cutImgToCanvas(file)\r\n    //console.log('这是一个字符串');\r\n  } else {\r\n    // 其他类型的处理\r\n    console.log('未知类型输入');\r\n  }\r\n\r\n\r\n\r\n  function cutImgToCanvas(url) {\r\n\r\n    var canvas = document.createElement(\"canvas\")\r\n    var ctx = canvas.getContext(\"2d\")\r\n\r\n    var image = new Image();\r\n    image.src = url;\r\n    image.onload = function () {\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n\r\n      requestAnimationFrame(function draw() {\r\n        // 绘制图片\r\n        ctx.drawImage(image, 0, 0);\r\n        var cuts = creCutArea({ w: canvas.width, h: canvas.height, x: 0, y: 0, s: 1 },4096);\r\n        // 检查图片是否完全绘制\r\n        if (image.complete) {\r\n          //console.log(cuts.length)\r\n          var cutImgs = []\r\n          for (var i = 0; i < cuts.length; i++) {\r\n            var canvas2 = document.createElement(\"canvas\");\r\n            canvas2.width = cuts[i].w;\r\n            canvas2.height = cuts[i].h;\r\n            var ctx2 = canvas2.getContext(\"2d\");\r\n            //requestAnimationFrame(function draw() {\r\n            ctx2.drawImage(canvas, cuts[i].x, cuts[i].y, cuts[i].w, cuts[i].h, 0, 0, cuts[i].w, cuts[i].h);\r\n            var imgData = new Uint8Array(atob(canvas2.toDataURL('image/png').split(',')[1]).split('').map(function (c) { return c.charCodeAt(0); }));\r\n            if (cuts.length > 1) {\r\n              cutImgs.push({ img: imgData, w: canvas2.width, h: canvas2.height, name: name + \"-\" + (i + 1), x: cuts[i].x, y: cuts[i].y })\r\n            } else {\r\n              cutImgs.push({ img: imgData, w: canvas2.width, h: canvas2.height, name: name, x: cuts[i].x, y: cuts[i].y })\r\n            }\r\n\r\n            //});  \r\n            if (i == cuts.length - 1) {\r\n              //console.log(cutImgs)\r\n              message([cutImgs, 'pixelIm'])\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n//svg拆解\r\nfunction processSVG(svgCode) {\r\n\r\n  // 创建一个新的DOM解析器\r\n  var parser = new DOMParser();\r\n  // 解析SVG代码\r\n  var svgDoc = parser.parseFromString(svgCode, 'text/xml');\r\n  var svgRoot = svgDoc.documentElement;\r\n  //console.log(svgRoot)\r\n  // 结果数组\r\n  var result = [];\r\n  // 开始遍历\r\n  traverse(svgRoot);\r\n  function traverse(node) {\r\n    if (node.nodeType === Node.ELEMENT_NODE) {\r\n      if (node.tagName.toLowerCase() === 'image') {\r\n        // 处理image节点\r\n        var imgs = cutImg(node.getAttribute('xlink:href'), \"图片\")\r\n      }\r\n    }\r\n    for (let i = 0; i < node.childNodes.length; i++) {\r\n      traverse(node.childNodes[i]);\r\n    }\r\n  }\r\n}\r\n\r\n//裁切方案\r\nfunction creCutArea(info,mix) {//{w:,h:,x:,y:,s:}\r\n  var W = info.w, H = info.h;//图片宽高\r\n  var Ws = info.w, Hs = info.h;//非尾部部分的裁剪宽高\r\n  var lastWs = info.w, lastHs = info.h;//尾部的裁剪宽高\r\n  var X = info.x, Y = info.y;//裁切区坐标\r\n  var cutW = 1, cutH = 1;//纵横裁剪数量\r\n  var cuts = [];//从左到右，从上到小的裁切区域集\r\n  var tips;\r\n  //切割方案\r\n  if (W * info.s <= mix && H * info.s <= mix) {//4K以内，正常生成\r\n    cuts = [{ w: W, h: H, x: info.x, y: info.y, s: 1 }]\r\n    return cuts;\r\n  } else {//多行列宫格\r\n    cutW = Math.ceil((W * info.s) / mix)\r\n    cutH = Math.ceil((H * info.s) / mix)\r\n    if (W % cutW == 0) { //宽度刚好等分\r\n      Ws = W / cutW\r\n      lastWs = Ws\r\n\r\n    } else { //有小数点\r\n      Ws = Math.ceil(W / cutW) //向上取整，最后一截短一些\r\n      lastWs = W - (Ws * (cutW - 1))\r\n    }\r\n    if (H % cutH == 0) { //长度刚好等分\r\n      Hs = H / cutH\r\n      lastHs = Hs\r\n      tips = \"高被整除\"\r\n    } else { //有小数点\r\n      Hs = Math.ceil(H / cutH) //向上取整，最后一截短一些\r\n      lastHs = H - (Hs * (cutH - 1))\r\n      tips = \"高不能整除，剩余：\" + lastHs\r\n    }\r\n\r\n    // 拆分图像数据\r\n    for (var i = 0; i < (cutW * cutH); i++) {\r\n\r\n      if ((i + 1) % cutW == 0 && i !== (cutW * cutH) - 1 && i !== 0) {\r\n        cuts.push({ w: lastWs, h: Hs, x: X, y: Y, });\r\n        Y = Y + Hs;\r\n        X = info.x;\r\n      } else if (i == (cutW * cutH) - 1) {\r\n        cuts.push({ w: lastWs, h: lastHs, x: X, y: Y, t: tips });\r\n      } else {\r\n        if (i > (cutW * (cutH - 1)) - 1) {\r\n          cuts.push({ w: Ws, h: lastHs, x: X, y: Y });\r\n        } else {\r\n          cuts.push({ w: Ws, h: Hs, x: X, y: Y });\r\n        }\r\n\r\n        if (cutW == 1) {\r\n          X = info.x;\r\n          Y = Y + Hs;\r\n        } else {\r\n          X = X + Ws;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n    return cuts;\r\n  }\r\n\r\n}\r\n\r\n/*---------------------------控制窗口状态-------------------------------*/\r\n//最大化窗口\r\nfunction bigWindow(e) {\r\n  if (e.checked) {\r\n    message([true, 'big']);\r\n  } else {\r\n    message([false, 'big']);\r\n  }\r\n}\r\n\r\n\r\nvar btnKeepTime = null;//给\"按钮-窗口固定/收起\"添加防抖定时器\r\n\r\n// 定义用户活动的事件类型\r\nconst activityEvents = ['mousemove', 'mousedown', 'keydown', 'scroll', 'touchstart', 'focus', 'focusin', 'click', 'mousewheel'];\r\n//鼠标移入则唤醒，并保持原tab,关闭侧边栏\r\ndocument.getElementById(\"zzz\").addEventListener('mousemove', function () {\r\n  console.log(\"唤醒~\")\r\n  viewPage(tabPage)\r\n  document.getElementById(\"bottom\").style.display = 'flex';\r\n  document.getElementById(\"top\").style.display = 'flex';\r\n  document.getElementById(\"side-page\").style.display = 'flex';\r\n  document.getElementById(\"zzz\").style.display = 'none';\r\n  if(document.getElementById(\"btn-side-0\").checked == true){\r\n    sidePage();\r\n  }\r\n  message([false, \"sleep\"]);\r\n})\r\n\r\n\r\n// 定义用户无活动时的回调函数\r\nfunction onIdle() {\r\n  console.log('休息一下~');\r\n  var main = ['top', 'page', 'btn']\r\n  for (var i = 0; i < main.length; i++) {\r\n    document.getElementById(main[i] + \"-main-1\").style.display = 'none'\r\n    document.getElementById(main[i] + \"-main-2\").style.display = 'none'\r\n    document.getElementById(main[i] + \"-main-3\").style.display = 'none'\r\n    document.getElementById(main[i] + \"-main-4\").style.display = 'none'\r\n  }\r\n  document.getElementById(\"bottom\").style.display = 'none';\r\n  document.getElementById(\"top\").style.display = 'none';\r\n  document.getElementById(\"mask\").style.display = 'none';\r\n  document.getElementById(\"side-page\").style.display = 'none';\r\n  document.getElementById(\"zzz\").style.display = 'block';\r\n  message([true, \"sleep\"])\r\n}\r\n\r\n// 启动或停止监听用户活动\r\nfunction runSleep(enable) {\r\n  if (enable) {\r\n    // 停止监听\r\n    activityEvents.forEach(eventType => {\r\n      window.removeEventListener(eventType, resetBtnKeepTime);\r\n    });\r\n    clearTimeout(btnKeepTime); // 清除定时器\r\n\r\n  } else {\r\n    // 启动监听\r\n    activityEvents.forEach(eventType => {\r\n      window.addEventListener(eventType, resetBtnKeepTime);\r\n    });\r\n    resetBtnKeepTime(); // 初始重置定时器\r\n  }\r\n}\r\n\r\n// 重置定时器\r\nfunction resetBtnKeepTime() {\r\n  clearTimeout(btnKeepTime); // 清除现有的定时器\r\n  btnKeepTime = setTimeout(onIdle, 5000); // 重新设置定时器\r\n}\r\n\r\n// 复选框状态改变时的处理\r\nbtnKeep.addEventListener('change', function () {\r\n  runSleep(this.checked);\r\n});\r\n\r\n// 初始化时禁用监听\r\nrunSleep(true);\r\n\r\n/*---------------------------监听整个文档的点击事件，控制侧边栏展开收起-------------------------------*/\r\nvar sideClose = null;\r\ndocument.addEventListener('mousedown', function (event) {\r\n  if (document.getElementById(\"btn-side-0\").checked) {\r\n    sideClose = setTimeout(() => {\r\n      if (!document.getElementById('side-area').contains(event.target) && document.activeElement) {\r\n        console.log('close sidepage')\r\n        document.getElementById(\"btn-side-0\").checked = false\r\n        sidePage()\r\n        document.getElementById('btn-side-text-0').style.pointerEvents = '';\r\n      }\r\n    }, 100)\r\n    document.addEventListener('mousemove', function () {\r\n      clearTimeout(sideClose);\r\n      sideClose = null;\r\n    });\r\n  }\r\n  /**/\r\n  if (!document.getElementById('editor-btns').contains(event.target) && document.activeElement) {\r\n    document.getElementById(\"editor-type\").style.animation = 'edits2 0.2s ease-out'\r\n    setTimeout(() => {\r\n      document.getElementById('editor-type').style.display = 'none';\r\n    }, 200)\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack://ynyu_set/./tool_plugin/ToolsSetFig/test/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./tool_plugin/ToolsSetFig/test/main.js"]();
/******/ 	
/******/ })()
;